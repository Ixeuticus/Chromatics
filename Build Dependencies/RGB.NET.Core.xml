<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RGB.NET.Core</name>
    </assembly>
    <members>
        <member name="T:RGB.NET.Core.IColorCorrection">
            <summary>
            Represents a generic color-correction.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IColorCorrection.ApplyTo(RGB.NET.Core.Color@)">
            <summary>
            Applies the <see cref="T:RGB.NET.Core.IColorCorrection"/> to the specified <see cref="T:RGB.NET.Core.Color"/>. 
            </summary>
            <param name="color">The <see cref="T:RGB.NET.Core.Color"/> to correct.</param>
        </member>
        <member name="T:RGB.NET.Core.DefaultColorBehavior">
            <inheritdoc />
            <summary>
            Represents the default-behavior for the work with colors.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.DefaultColorBehavior.ToString(RGB.NET.Core.Color@)">
            <summary>
            Converts the individual byte values of this <see cref="T:RGB.NET.Core.Color"/> to a human-readable string.
            </summary>
            <returns>A string that contains the individual byte values of this <see cref="T:RGB.NET.Core.Color"/>. For example "[A: 255, R: 255, G: 0, B: 0]".</returns>
        </member>
        <member name="M:RGB.NET.Core.DefaultColorBehavior.Equals(RGB.NET.Core.Color@,System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Color" /> and is equivalent to this <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <param name="color">The color to test.</param>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Color" /> equivalent to this <see cref="T:RGB.NET.Core.Color" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.DefaultColorBehavior.Equals(RGB.NET.Core.Color@,RGB.NET.Core.Color@)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Color" /> and is equivalent to this <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <param name="color">The first color to test.</param>
            <param name="color2">The second color to test.</param>
            <returns><c>true</c> if <paramref name="color2" /> equivalent to this <see cref="T:RGB.NET.Core.Color" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.DefaultColorBehavior.GetHashCode(RGB.NET.Core.Color@)">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Color" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.DefaultColorBehavior.Blend(RGB.NET.Core.Color@,RGB.NET.Core.Color@)">
            <summary>
            Blends a <see cref="T:RGB.NET.Core.Color"/> over this color.
            </summary>
            <param name="baseColor">The <see cref="T:RGB.NET.Core.Color"/> to to blend over.</param>
            <param name="blendColor">The <see cref="T:RGB.NET.Core.Color"/> to blend.</param>
        </member>
        <member name="T:RGB.NET.Core.IColorBehavior">
            <summary>
            Represents a behavior of a color for base operations.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IColorBehavior.ToString(RGB.NET.Core.Color@)">
            <summary>
            Converts the specified <see cref="T:RGB.NET.Core.Color"/> to a string representation.
            </summary>
            <param name="color">The color to convert.</param>
            <returns>The string representation of the specified color.</returns>
        </member>
        <member name="M:RGB.NET.Core.IColorBehavior.Equals(RGB.NET.Core.Color@,System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Color" /> and is equivalent to this <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <param name="color">The color to test.</param>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Color" /> equivalent to this <see cref="T:RGB.NET.Core.Color" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.IColorBehavior.Equals(RGB.NET.Core.Color@,RGB.NET.Core.Color@)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Color" /> and is equivalent to this <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <param name="color">The first color to test.</param>
            <param name="color2">The second color to test.</param>
            <returns><c>true</c> if <paramref name="color2" /> equivalent to this <see cref="T:RGB.NET.Core.Color" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.IColorBehavior.GetHashCode(RGB.NET.Core.Color@)">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Color" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.IColorBehavior.Blend(RGB.NET.Core.Color@,RGB.NET.Core.Color@)">
            <summary>
            Blends a <see cref="T:RGB.NET.Core.Color"/> over this color.
            </summary>
            <param name="baseColor">The <see cref="T:RGB.NET.Core.Color"/> to to blend over.</param>
            <param name="blendColor">The <see cref="T:RGB.NET.Core.Color"/> to blend.</param>
        </member>
        <member name="T:RGB.NET.Core.Color">
            <summary>
            Represents an ARGB (alpha, red, green, blue) color.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.Transparent">
            <summary>
            Gets an transparent color [A: 0, R: 0, G: 0, B: 0]
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.Behavior">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.IColorBehavior"/> used to perform operations on colors.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.Color.A">
            <summary>
            Gets the alpha component value of this <see cref="T:RGB.NET.Core.Color"/> as percentage in the range [0..1].
            </summary>
        </member>
        <member name="F:RGB.NET.Core.Color.R">
            <summary>
            Gets the red component value of this <see cref="T:RGB.NET.Core.Color"/> as percentage in the range [0..1].
            </summary>
        </member>
        <member name="F:RGB.NET.Core.Color.G">
            <summary>
            Gets the green component value of this <see cref="T:RGB.NET.Core.Color"/> as percentage in the range [0..1].
            </summary>
        </member>
        <member name="F:RGB.NET.Core.Color.B">
            <summary>
            Gets the blue component value of this <see cref="T:RGB.NET.Core.Color"/> as percentage in the range [0..1].
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using RGB-Values.
            Alpha defaults to 255.
            </summary>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Int32,System.Int32,System.Int32)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using RGB-Values.
            Alpha defaults to 255.
            </summary>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using ARGB values.
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using ARGB values.
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using RGB-percent values.
            Alpha defaults to 1.0.
            </summary>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Single,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using ARGB-percent values.
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using ARGB-percent values.
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using ARGB-percent values.
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Byte,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using ARGB-percent values.
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using ARGB-percent values.
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(RGB.NET.Core.Color@)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct by cloning a existing <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <param name="color">The <see cref="T:RGB.NET.Core.Color" /> the values are copied from.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.ToString">
            <summary>
            Gets a human-readable string, as defined by the current <see cref="P:RGB.NET.Core.Color.Behavior"/>.
            </summary>
            <returns>A string that contains the individual byte values of this <see cref="T:RGB.NET.Core.Color"/>. Default format: "[A: 255, R: 255, G: 0, B: 0]".</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Color" /> and is equivalent to this <see cref="T:RGB.NET.Core.Color" />, as defined by the current <see cref="P:RGB.NET.Core.Color.Behavior"/>.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Color" /> equivalent to this <see cref="T:RGB.NET.Core.Color" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.Equals(RGB.NET.Core.Color)">
            <summary>
            Tests whether the specified <see cref="T:RGB.NET.Core.Color" /> is equivalent to this <see cref="T:RGB.NET.Core.Color" />, as defined by the current <see cref="P:RGB.NET.Core.Color.Behavior"/>.
            </summary>
            <param name="other">The color to test.</param>
            <returns><c>true</c> if <paramref name="other" /> is equivalent to this <see cref="T:RGB.NET.Core.Color" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Color" />, as defined by the current <see cref="P:RGB.NET.Core.Color.Behavior"/>.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Color" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.Blend(RGB.NET.Core.Color@)">
            <summary>
            Blends a <see cref="T:RGB.NET.Core.Color"/> over this color, as defined by the current <see cref="P:RGB.NET.Core.Color.Behavior"/>.
            </summary>
            <param name="color">The <see cref="T:RGB.NET.Core.Color"/> to blend.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Addition(RGB.NET.Core.Color@,RGB.NET.Core.Color@)">
            <summary>
            Blends the provided colors as if <see cref="M:RGB.NET.Core.Color.Blend(RGB.NET.Core.Color@)"/> would've been called on <paramref name="color1" />.
            </summary>
            <param name="color1">The base color.</param>
            <param name="color2">The color to blend.</param>
            <returns>The blended color.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Equality(RGB.NET.Core.Color@,RGB.NET.Core.Color@)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Color" /> are equal.
            </summary>
            <param name="color1">The first <see cref="T:RGB.NET.Core.Color" /> to compare.</param>
            <param name="color2">The second <see cref="T:RGB.NET.Core.Color" /> to compare.</param>
            <returns><c>true</c> if <paramref name="color1" /> and <paramref name="color2" /> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Inequality(RGB.NET.Core.Color@,RGB.NET.Core.Color@)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Color" /> are equal.
            </summary>
            <param name="color1">The first <see cref="T:RGB.NET.Core.Color" /> to compare.</param>
            <param name="color2">The second <see cref="T:RGB.NET.Core.Color" /> to compare.</param>
            <returns><c>true</c> if <paramref name="color1" /> and <paramref name="color2" /> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte})~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:System.ValueTuple"/> of ARGB-components to a <see cref="T:RGB.NET.Core.Color"/>.
            </summary>
            <param name="components">The <see cref="T:System.ValueTuple"/> containing the components.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:System.ValueTuple"/> of ARGB-components to a <see cref="T:RGB.NET.Core.Color"/>.
            </summary>
            <param name="components">The <see cref="T:System.ValueTuple"/> containing the components.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32})~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:System.ValueTuple"/> of ARGB-components to a <see cref="T:RGB.NET.Core.Color"/>.
            </summary>
            <param name="components">The <see cref="T:System.ValueTuple"/> containing the components.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:System.ValueTuple"/> of ARGB-components to a <see cref="T:RGB.NET.Core.Color"/>.
            </summary>
            <param name="components">The <see cref="T:System.ValueTuple"/> containing the components.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:System.ValueTuple"/> of ARGB-components to a <see cref="T:RGB.NET.Core.Color"/>.
            </summary>
            <param name="components">The <see cref="T:System.ValueTuple"/> containing the components.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:System.ValueTuple"/> of ARGB-components to a <see cref="T:RGB.NET.Core.Color"/>.
            </summary>
            <param name="components">The <see cref="T:System.ValueTuple"/> containing the components.</param>
            <returns>The color.</returns>
        </member>
        <member name="T:RGB.NET.Core.HclColor">
            <summary>
            Contains helper-methods and extension for the <see cref="T:RGB.NET.Core.Color"/>-type to work in the Hcl color space.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.HclColor.GetHclH(RGB.NET.Core.Color@)">
            <summary>
            Gets the H component value (Hcl-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..360].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The H component value of the color. </returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.GetHclC(RGB.NET.Core.Color@)">
            <summary>
            Gets the c component value (Hcl-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..1].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The c component value of the color. </returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.GetHclL(RGB.NET.Core.Color@)">
            <summary>
            Gets the l component value (Hcl-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..1].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The l component value of the color. </returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.GetHcl(RGB.NET.Core.Color@)">
            <summary>
            Gets the H, c and l component values (Hcl-color space) of this <see cref="T:RGB.NET.Core.Color"/>.
            H in the range [0..360].
            c in the range [0..1].
            l in the range [0..1].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>A tuple containing the H, c and l component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.AddHcl(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Adds the specified Hcl values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="h">The H value to add.</param>
            <param name="c">The c value to add.</param>
            <param name="l">The l value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.SubtractHcl(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Subtracts the specified Hcl values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="h">The H value to subtract.</param>
            <param name="c">The c value to subtract.</param>
            <param name="l">The l value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.MultiplyHcl(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Multiplies the specified Hcl values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="h">The H value to multiply.</param>
            <param name="c">The c value to multiply.</param>
            <param name="l">The l value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.DivideHcl(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Divides the specified Hcl values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="h">The H value to divide.</param>
            <param name="c">The c value to divide.</param>
            <param name="l">The l value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.SetHcl(RGB.NET.Core.Color@,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Sets the specified X value of this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="h">The H value to set.</param>
            <param name="c">The c value to set.</param>
            <param name="l">The l value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.Create(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using Hcl-Values. 
            </summary>
            <param name="h">The H component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="c">The c component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="l">The l component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.Create(System.Byte,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using alpha and Hcl-Values. 
            </summary>
            <param name="alpha">The alphc component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="h">The H component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="c">The c component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="l">The l component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.Create(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using alpha and Hcl-Values. 
            </summary>
            <param name="alpha">The alphc component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="h">The H component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="c">The c component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="l">The l component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.HclColor.Create(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using alpha and Hcl-Values. 
            </summary>
            <param name="alpha">The alphc component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="h">The H component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="c">The c component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="l">The l component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="T:RGB.NET.Core.HSVColor">
            <summary>
            Contains helper-methods and extension for the <see cref="T:RGB.NET.Core.Color"/>-type to work in the HSV color space.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.GetHue(RGB.NET.Core.Color@)">
            <summary>
            Gets the hue component value (HSV-color space) of this <see cref="T:RGB.NET.Core.Color"/> as degree in the range [0..360].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The hue component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.GetSaturation(RGB.NET.Core.Color@)">
            <summary>
            Gets the saturation component value (HSV-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..1].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The saturation component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.GetValue(RGB.NET.Core.Color@)">
            <summary>
            Gets the value component value (HSV-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..1].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The value component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.GetHSV(RGB.NET.Core.Color@)">
            <summary>
            Gets the hue, saturation and value component values (HSV-color space) of this <see cref="T:RGB.NET.Core.Color"/>.
            Hue as degree in the range [0..1].
            Saturation in the range [0..1].
            Value in the range [0..1].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>A tuple containing the hue, saturation and value component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.AddHSV(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Adds the specified HSV values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="hue">The hue value to add.</param>
            <param name="saturation">The saturation value to add.</param>
            <param name="value">The value value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.SubtractHSV(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Subtracts the specified HSV values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="hue">The hue value to subtract.</param>
            <param name="saturation">The saturation value to subtract.</param>
            <param name="value">The value value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.MultiplyHSV(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Multiplies the specified HSV values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="hue">The hue value to multiply.</param>
            <param name="saturation">The saturation value to multiply.</param>
            <param name="value">The value value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.DivideHSV(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Divides the specified HSV values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="hue">The hue value to divide.</param>
            <param name="saturation">The saturation value to divide.</param>
            <param name="value">The value value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.SetHSV(RGB.NET.Core.Color@,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Sets the specified hue value of this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="hue">The hue value to set.</param>
            <param name="saturation">The saturation value to set.</param>
            <param name="value">The value value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.Create(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using HSV-Values. 
            </summary>
            <param name="hue">The hue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="saturation">The saturation component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="value">The value component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.Create(System.Byte,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using AHSV-Values. 
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="hue">The hue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="saturation">The saturation component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="value">The value component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.Create(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using AHSV-Values. 
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="hue">The hue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="saturation">The saturation component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="value">The value component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.HSVColor.Create(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using AHSV-Values. 
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="hue">The hue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="saturation">The saturation component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="value">The value component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="T:RGB.NET.Core.LabColor">
            <summary>
            Contains helper-methods and extension for the <see cref="T:RGB.NET.Core.Color"/>-type to work in the Lab color space.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.LabColor.GetLabL(RGB.NET.Core.Color@)">
            <summary>
            Gets the L component value (Lab-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..100].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The L component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.GetLabA(RGB.NET.Core.Color@)">
            <summary>
            Gets the a component value (Lab-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..1].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The a component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.GetLabB(RGB.NET.Core.Color@)">
            <summary>
            Gets the b component value (Lab-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..1].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The b component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.GetLab(RGB.NET.Core.Color@)">
            <summary>
            Gets the L, a and b component values (Lab-color space) of this <see cref="T:RGB.NET.Core.Color"/>.
            L in the range [0..100].
            a in the range [0..1].
            b in the range [0..1].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>A tuple containing the L, a and b component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.AddLab(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Adds the specified Lab values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="l">The L value to add.</param>
            <param name="a">The a value to add.</param>
            <param name="b">The b value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.SubtractLab(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Subtracts the specified Lab values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="l">The L value to subtract.</param>
            <param name="a">The a value to subtract.</param>
            <param name="b">The b value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.MultiplyLab(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Multiplies the specified Lab values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="l">The L value to multiply.</param>
            <param name="a">The a value to multiply.</param>
            <param name="b">The b value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.DivideLab(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Divides the specified Lab values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="l">The L value to divide.</param>
            <param name="a">The a value to divide.</param>
            <param name="b">The b value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.SetLab(RGB.NET.Core.Color@,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Sets the specified X valueof this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="l">The L value to set.</param>
            <param name="a">The a value to set.</param>
            <param name="b">The b value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.Create(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using Lab-Values. 
            </summary>
            <param name="l">The L component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="a">The a component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The b component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.Create(System.Byte,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using alpha and Lab-Values. 
            </summary>
            <param name="alpha">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="l">The L component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="a">The a component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The b component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.Create(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using alpha and Lab-Values. 
            </summary>
            <param name="alpha">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="l">The L component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="a">The a component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The b component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.LabColor.Create(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using alpha and Lab-Values. 
            </summary>
            <param name="alpha">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="l">The L component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="a">The a component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The b component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="T:RGB.NET.Core.RGBColor">
            <summary>
            Contains helper-methods and extension for the <see cref="T:RGB.NET.Core.Color"/>-type to work in the RGB color space.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.GetA(RGB.NET.Core.Color@)">
            <summary>
            Gets the A component value of this <see cref="T:RGB.NET.Core.Color"/> as byte in the range [0..255].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The A component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.GetR(RGB.NET.Core.Color@)">
            <summary>
            Gets the R component value of this <see cref="T:RGB.NET.Core.Color"/> as byte in the range [0..255].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The R component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.GetG(RGB.NET.Core.Color@)">
            <summary>
            Gets the G component value of this <see cref="T:RGB.NET.Core.Color"/> as byte in the range [0..255].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The G component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.GetB(RGB.NET.Core.Color@)">
            <summary>
            Gets the B component value of this <see cref="T:RGB.NET.Core.Color"/> as byte in the range [0..255].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The B component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.GetRGBBytes(RGB.NET.Core.Color@)">
            <summary>
            Gets the A, R, G and B component value of this <see cref="T:RGB.NET.Core.Color"/> as byte in the range [0..255].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>A tuple containing the A, R, G and B component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.GetRGB(RGB.NET.Core.Color@)">
            <summary>
            Gets the A, R, G and B component value of this <see cref="T:RGB.NET.Core.Color"/> as percentage in the range [0..1].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>A tuple containing the A, R, G and B component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.AddRGB(RGB.NET.Core.Color@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the specified RGB values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="r">The red value to add.</param>
            <param name="g">The green value to add.</param>
            <param name="b">The blue value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.AddRGB(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Adds the specified RGB-percent values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="r">The red value to add.</param>
            <param name="g">The green value to add.</param>
            <param name="b">The blue value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.AddA(RGB.NET.Core.Color@,System.Int32)">
            <summary>
            Adds the specified alpha value to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="a">The alpha value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.AddA(RGB.NET.Core.Color@,System.Single)">
            <summary>
            Adds the specified alpha-percent value to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="a">The alpha value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.SubtractRGB(RGB.NET.Core.Color@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Subtracts the specified RGB values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="r">The red value to subtract.</param>
            <param name="g">The green value to subtract.</param>
            <param name="b">The blue value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.SubtractRGB(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Subtracts the specified RGB values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="r">The red value to subtract.</param>
            <param name="g">The green value to subtract.</param>
            <param name="b">The blue value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.SubtractA(RGB.NET.Core.Color@,System.Int32)">
            <summary>
            Subtracts the specified alpha value to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="a">The alpha value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.SubtractA(RGB.NET.Core.Color@,System.Single)">
            <summary>
            Subtracts the specified alpha-percent value to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="aPercent">The alpha value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.MultiplyRGB(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Multiplies the specified RGB values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="r">The red value to multiply.</param>
            <param name="g">The green value to multiply.</param>
            <param name="b">The blue value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.MultiplyA(RGB.NET.Core.Color@,System.Single)">
            <summary>
            Multiplies the specified alpha value to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="a">The alpha value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.DivideRGB(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Divides the specified RGB values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="r">The red value to divide.</param>
            <param name="g">The green value to divide.</param>
            <param name="b">The blue value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.DivideA(RGB.NET.Core.Color@,System.Single)">
            <summary>
            Divides the specified alpha value to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="a">The alpha value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.SetRGB(RGB.NET.Core.Color@,System.Nullable{System.Byte},System.Nullable{System.Byte},System.Nullable{System.Byte})">
            <summary>
            Sets the specified RGB value of this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="r">The red value to set.</param>
            <param name="g">The green value to set.</param>
            <param name="b">The blue value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.SetRGB(RGB.NET.Core.Color@,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets the specified RGB value of this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="r">The red value to set.</param>
            <param name="g">The green value to set.</param>
            <param name="b">The blue value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.SetRGB(RGB.NET.Core.Color@,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Sets the specified RGB value of this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="r">The red value to set.</param>
            <param name="g">The green value to set.</param>
            <param name="b">The blue value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.SetA(RGB.NET.Core.Color@,System.Int32)">
            <summary>
            Sets the specified alpha value of this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="a">The alpha value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.SetA(RGB.NET.Core.Color@,System.Single)">
            <summary>
            Sets the specified alpha value of this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="a">The alpha value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.AsRGBHexString(RGB.NET.Core.Color@,System.Boolean)">
            <summary>
            Gets the current color as a RGB-HEX-string.
            </summary>
            <returns>The RGB-HEX-string.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.AsARGBHexString(RGB.NET.Core.Color@,System.Boolean)">
            <summary>
            Gets the current color as a ARGB-HEX-string.
            </summary>
            <returns>The ARGB-HEX-string.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBColor.FromHexString(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using a HEX-string. 
            </summary>
            <param name="hexString">The HEX-representation of the color.</param>
            <returns>The color created from the HEX-string.</returns>
        </member>
        <member name="T:RGB.NET.Core.XYZColor">
            <summary>
            Contains helper-methods and extension for the <see cref="T:RGB.NET.Core.Color"/>-type to work in the XYZ color space.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.GetX(RGB.NET.Core.Color@)">
            <summary>
            Gets the X component value (XYZ-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..95.047].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The X component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.GetY(RGB.NET.Core.Color@)">
            <summary>
            Gets the Y component value (XYZ-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..100].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The Y component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.GetZ(RGB.NET.Core.Color@)">
            <summary>
            Gets the Z component value (XYZ-color space) of this <see cref="T:RGB.NET.Core.Color"/> in the range [0..108.883].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>The Z component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.GetXYZ(RGB.NET.Core.Color@)">
            <summary>
            Gets the X, Y and Z component values (XYZ-color space) of this <see cref="T:RGB.NET.Core.Color"/>.
            X in the range [0..95.047].
            Y in the range [0..100].
            Z in the range [0..108.883].
            </summary>
            <param name="color">The color to get the value from.</param>
            <returns>A tuple containing the X, Y and Z component value of the color.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.AddXYZ(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Adds the specified XYZ values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="x">The X value to add.</param>
            <param name="y">The Y value to add.</param>
            <param name="z">The Z value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.SubtractXYZ(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Subtracts the specified XYZ values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="x">The X value to subtract.</param>
            <param name="y">The Y value to subtract.</param>
            <param name="z">The Z value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.MultiplyXYZ(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Multiplies the specified XYZ values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="x">The X value to multiply.</param>
            <param name="y">The Y value to multiply.</param>
            <param name="z">The Z value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.DivideXYZ(RGB.NET.Core.Color@,System.Single,System.Single,System.Single)">
            <summary>
            Divides the specified XYZ values to this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="x">The X value to divide.</param>
            <param name="y">The Y value to divide.</param>
            <param name="z">The Z value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.SetXYZ(RGB.NET.Core.Color@,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Sets the specified X valueof this color.
            </summary>
            <param name="color">The color to modify.</param>
            <param name="x">The X value to set.</param>
            <param name="y">The Y value to set.</param>
            <param name="z">The Z value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.Create(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using XYZ-Values. 
            </summary>
            <param name="x">The X component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="y">The Y component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="z">The Z component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.Create(System.Byte,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using alpha and XYZ-Values. 
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="x">The X component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="y">The Y component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="z">The Z component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.Create(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using alpha and XYZ-Values. 
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="x">The X component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="y">The Y component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="z">The Z component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.XYZColor.Create(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using alpha and XYZ-Values. 
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="x">The X component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="y">The Y component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="z">The Z component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="T:RGB.NET.Core.AbstractDecoratable`1">
            <inheritdoc cref="T:RGB.NET.Core.AbstractBindable" />
            <inheritdoc cref="T:RGB.NET.Core.IDecoratable`1" />
        </member>
        <member name="P:RGB.NET.Core.AbstractDecoratable`1.Decorators">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractDecoratable`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.AbstractDecoratable`1"/> class.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractDecoratable`1.AddDecorator(`0)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractDecoratable`1.RemoveDecorator(`0)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractDecoratable`1.RemoveAllDecorators">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.AbstractDecorator">
            <inheritdoc cref="T:RGB.NET.Core.AbstractBindable" />
            <inheritdoc cref="T:RGB.NET.Core.IDecorator" />
        </member>
        <member name="P:RGB.NET.Core.AbstractDecorator.IsEnabled">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractDecorator.Order">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractDecorator.DecoratedObjects">
            <summary>
            Gets a readonly-list of all <see cref="T:RGB.NET.Core.IDecoratable"/> this decorator is attached to.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractDecorator.OnAttached(RGB.NET.Core.IDecoratable)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractDecorator.OnDetached(RGB.NET.Core.IDecoratable)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractDecorator.Detach">
            <summary>
            Detaches the decorator from all <see cref="T:RGB.NET.Core.IDecoratable"/> it is currently attached to.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.AbstractUpdateAwareDecorator">
            <inheritdoc />
            <summary>
            Represents a basic decorator which is aware of the <see cref="E:RGB.NET.Core.RGBSurface.Updating" /> event.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractUpdateAwareDecorator.Surface">
            <summary>
            Gets the surface this decorator is attached to.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractUpdateAwareDecorator.UpdateIfDisabled">
            <summary>
            Gets or sets if the <see cref="T:RGB.NET.Core.AbstractUpdateAwareDecorator"/> should call <see cref="M:RGB.NET.Core.AbstractUpdateAwareDecorator.Update(System.Double)"/> even if the Decorator is disabled.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateAwareDecorator.#ctor(RGB.NET.Core.RGBSurface,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.AbstractUpdateAwareDecorator"/> class.
            </summary>
            <param name="surface">The surface this decorator is attached to.</param>
            <param name="updateIfDisabled">Bool indicating if the <see cref="T:RGB.NET.Core.AbstractUpdateAwareDecorator"/> should call <see cref="M:RGB.NET.Core.AbstractUpdateAwareDecorator.Update(System.Double)"/> even if the Decorator is disabled.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateAwareDecorator.OnAttached(RGB.NET.Core.IDecoratable)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateAwareDecorator.OnDetached(RGB.NET.Core.IDecoratable)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateAwareDecorator.Update(System.Double)">
            <summary>
            Updates this <see cref="T:RGB.NET.Core.AbstractUpdateAwareDecorator"/>.
            </summary>
            <param name="deltaTime">The elapsed time (in seconds) since the last update.</param>
        </member>
        <member name="T:RGB.NET.Core.IBrushDecorator">
            <inheritdoc />
            <summary>
            Represents a <see cref="T:RGB.NET.Core.IDecorator" /> decorating a <see cref="T:RGB.NET.Core.IBrush" />.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IBrushDecorator.ManipulateColor(RGB.NET.Core.Rectangle@,RGB.NET.Core.RenderTarget@,RGB.NET.Core.Color@)">
            <summary>
            Decorator-Method called by the <see cref="T:RGB.NET.Core.IBrush"/>.
            </summary>
            <param name="rectangle">The rectangle in which the <see cref="T:RGB.NET.Core.IBrush"/> should be drawn.</param>
            <param name="renderTarget">The target (key/point) from which the <see cref="T:RGB.NET.Core.Color"/> should be taken.</param>
            <param name="color">The <see cref="T:RGB.NET.Core.Color"/> to be modified.</param>
        </member>
        <member name="T:RGB.NET.Core.IDecoratable">
            <summary>
            Represents a basic decoratable.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IDecoratable`1">
            <inheritdoc />
            <summary>
            Represents a basic decoratable for a specific type of <see cref="T:RGB.NET.Core.IDecorator" />
            </summary>
            <typeparam name="T">The type of decorators this decoratable can be decorated with.</typeparam>
        </member>
        <member name="P:RGB.NET.Core.IDecoratable`1.Decorators">
            <summary>
            Gets a readonly-list of all <see cref="T:RGB.NET.Core.IDecorator"/> attached to this <see cref="T:RGB.NET.Core.IDecoratable`1"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IDecoratable`1.AddDecorator(`0)">
            <summary>
            Adds an <see cref="T:RGB.NET.Core.IDecorator"/> to the <see cref="T:RGB.NET.Core.IDecoratable"/>.
            </summary>
            <param name="decorator">The <see cref="T:RGB.NET.Core.IDecorator"/> to be added.</param>
        </member>
        <member name="M:RGB.NET.Core.IDecoratable`1.RemoveDecorator(`0)">
            <summary>
            Removes an <see cref="T:RGB.NET.Core.IDecorator"/> from the <see cref="T:RGB.NET.Core.IDecoratable"/>.
            </summary>
            <param name="decorator">The <see cref="T:RGB.NET.Core.IDecorator"/> to be removed.</param>
        </member>
        <member name="M:RGB.NET.Core.IDecoratable`1.RemoveAllDecorators">
            <summary>
            Removes all <see cref="T:RGB.NET.Core.IDecorator"/> from the <see cref="T:RGB.NET.Core.IDecoratable"/>.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IDecorator">
            <summary>
            Represents a basic decorator.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IDecorator.IsEnabled">
            <summary>
            Gets or sets if the <see cref="T:RGB.NET.Core.IDecorator"/> is enabled and will be used.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IDecorator.Order">
            <summary>
            Gets or sets the order in which multiple decorators should be applied on the same object.
            Higher orders are processed first.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IDecorator.OnAttached(RGB.NET.Core.IDecoratable)">
            <summary>
            Attaches this <see cref="T:RGB.NET.Core.IDecorator"/> to the specified target.
            </summary>
            <param name="decoratable">The object this <see cref="T:RGB.NET.Core.IDecorator"/> should be attached to.</param>
        </member>
        <member name="M:RGB.NET.Core.IDecorator.OnDetached(RGB.NET.Core.IDecoratable)">
            <summary>
            Detaches this <see cref="T:RGB.NET.Core.IDecorator"/> from the specified target.
            </summary>
            <param name="decoratable">The object this <see cref="T:RGB.NET.Core.IDecorator"/> should be detached from.</param>
        </member>
        <member name="T:RGB.NET.Core.ILedGroupDecorator">
            <inheritdoc />
            <summary>
            Represents a basic decorator decorating a <see cref="T:RGB.NET.Core.ILedGroup" />.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.AbstractRGBDevice`1">
            <inheritdoc cref="T:RGB.NET.Core.AbstractBindable" />
            <inheritdoc cref="T:RGB.NET.Core.IRGBDevice`1" />
            <summary>
            Represents a generic RGB-device.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.DeviceInfo">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.RGB#NET#Core#IRGBDevice#DeviceInfo">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.ColorCorrections">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.RequiresFlush">
            <summary>
            Gets or sets if the device needs to be flushed on every update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.LedMapping">
            <summary>
            Gets a dictionary containing all <see cref="T:RGB.NET.Core.Led"/> of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.UpdateQueue">
            <summary>
            Gets the update queue used to update this device.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.RGB#NET#Core#IRGBDevice#Item(RGB.NET.Core.LedId)">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.RGB#NET#Core#IRGBDevice#Item(RGB.NET.Core.Point)">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.RGB#NET#Core#IRGBDevice#Item(RGB.NET.Core.Rectangle,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.#ctor(`0,RGB.NET.Core.IUpdateQueue)">
            <summary> 
            Initializes a new instance of the <see cref="T:RGB.NET.Core.AbstractRGBDevice`1"/> class.
            </summary>
            <param name="deviceInfo">The device info of this device.</param>
            <param name="updateQueue">The queue used to update this device.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.Update(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.GetLedsToUpdate(System.Boolean)">
            <summary>
            Gets an enumerable of LEDs that are changed and requires an update.
            </summary>
            <param name="flushLeds">Forces all LEDs to be treated as dirty.</param>
            <returns>The collection LEDs to update.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.GetUpdateData(RGB.NET.Core.Led)">
            <summary>
            Gets an enumerable of a custom data and color tuple for the specified leds.
            </summary>
            <remarks>
            Applies all <see cref="P:RGB.NET.Core.AbstractRGBDevice`1.ColorCorrections"/>.
            if no <see cref="P:RGB.NET.Core.Led.CustomData"/> ist specified the <see cref="P:RGB.NET.Core.Led.Id"/> is used.
            </remarks>
            <param name="leds">The enumerable of leds to convert.</param>
            <returns>The enumerable of custom data and color tuples for the specified leds.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.UpdateLeds(System.Collections.Generic.IEnumerable{RGB.NET.Core.Led})">
            <summary>
            Sends all the updated <see cref="T:RGB.NET.Core.Led"/> to the device.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.DeviceUpdate">
            <summary>
            Performs device specific updates.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.AddLed(RGB.NET.Core.LedId,RGB.NET.Core.Point@,RGB.NET.Core.Size@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.RemoveLed(RGB.NET.Core.LedId)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.GetLedCustomData(RGB.NET.Core.LedId)">
            <summary>
            Gets the custom data associated with the specified LED.
            </summary>
            <param name="ledId">The id of the led.</param>
            <returns>The custom data for the specified LED.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.OnAttached">
            <summary>
            Called when the device is attached to a surface.
            </summary>
            <remarks> 
            When overriden base should be called to validate boundries.
            </remarks>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.OnDetached">
            <summary>
            Called when the device is detached from a surface.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.GetEnumerator">
            <inheritdoc />
            <summary>
            Returns an enumerator that iterates over all <see cref="T:RGB.NET.Core.Led" /> of the <see cref="T:RGB.NET.Core.IRGBDevice" />.
            </summary>
            <returns>An enumerator for all <see cref="T:RGB.NET.Core.Led" /> of the <see cref="T:RGB.NET.Core.IRGBDevice" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
            <summary>
            Returns an enumerator that iterates over all <see cref="T:RGB.NET.Core.Led" /> of the <see cref="T:RGB.NET.Core.IRGBDevice" />.
            </summary>
            <returns>An enumerator for all <see cref="T:RGB.NET.Core.Led" /> of the <see cref="T:RGB.NET.Core.IRGBDevice" />.</returns>
        </member>
        <member name="T:RGB.NET.Core.AbstractRGBDeviceProvider">
            <summary>
            Represents the abstract base implementation for a <see cref="T:RGB.NET.Core.IRGBDeviceProvider"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDeviceProvider.IsInitialized">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDeviceProvider.ThrowsExceptions">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDeviceProvider.Devices">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDeviceProvider.UpdateTriggerMapping">
            <summary>
            Gets the dictionary containing the registered update triggers.
            Normally <see cref="P:RGB.NET.Core.AbstractRGBDeviceProvider.UpdateTriggers"/> should be used to access them.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDeviceProvider.UpdateTriggers">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.AbstractRGBDeviceProvider.Exception">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.AbstractRGBDeviceProvider" /> class.
            </summary>
            <param name="defaultUpdateRateHardLimit">The update rate hard limit all update triggers for this device provider are initialized with.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.Initialize(RGB.NET.Core.RGBDeviceType,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.GetLoadedDevices(RGB.NET.Core.RGBDeviceType)">
            <summary>
            Loads devices and returns a filtered list of them.
            </summary>
            <remarks> 
            The underlying loading of the devices happens in <see cref="M:RGB.NET.Core.AbstractRGBDeviceProvider.LoadDevices"/>.
            </remarks>
            <param name="loadFilter"><see cref="T:RGB.NET.Core.RGBDeviceType"/>-flags to filter the device with.</param>
            <returns>The filtered collection of loaded devices.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.InitializeSDK">
            <summary>
            Initializes the underlying SDK.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.LoadDevices">
            <summary>
            Loads all devices this device provider is capable of loading.
            </summary>
            <remarks> 
            Filtering happens in <see cref="M:RGB.NET.Core.AbstractRGBDeviceProvider.GetLoadedDevices(RGB.NET.Core.RGBDeviceType)"/>.
            </remarks>
            <returns>A collection of loaded devices.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.GetUpdateTrigger(System.Int32,System.Nullable{System.Double})">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.IDeviceUpdateTrigger"/> mapped to the specified id or a new one if the id wasn't requested before.
            </summary>
            <remarks>
            The creation of the update trigger happens in <see cref="M:RGB.NET.Core.AbstractRGBDeviceProvider.CreateUpdateTrigger(System.Int32,System.Double)"/>.
            </remarks>
            <param name="id">The id of the update trigger.</param>
            <param name="updateRateHardLimit">The update rate hard limit to be set in the update trigger.</param>
            <returns>The update trigger mapped to the specified id.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.CreateUpdateTrigger(System.Int32,System.Double)">
            <summary>
            Creates a update trigger with the specified id and the specified update rate hard limit.
            </summary>
            <param name="id">The id of the update trigger.</param>
            <param name="updateRateHardLimit">The update rate hard limit tobe  set in the update trigger.</param>
            <returns>The newly created update trigger.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.Reset">
            <summary>
            Resets the device provider and disposes all devices and update triggers.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.Throw(System.Exception,System.Boolean)">
            <summary>
            Triggers the <see cref="E:RGB.NET.Core.AbstractRGBDeviceProvider.Exception"/>-event and throws the specified exception if <see cref="P:RGB.NET.Core.AbstractRGBDeviceProvider.ThrowsExceptions"/> is true and it is not overriden in the event.
            </summary>
            <param name="ex">The exception to throw.</param>
            <param name="isCritical">Indicates if the exception is critical for device provider to work correctly.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.OnException(RGB.NET.Core.ExceptionEventArgs)">
            <summary>
            Throws the <see cref="E:RGB.NET.Core.AbstractRGBDeviceProvider.Exception"/> event.
            </summary>
            <param name="args">The parameters passed to the event.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDeviceProvider.Dispose">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.IRGBDevice">
            <inheritdoc cref="T:System.Collections.Generic.IEnumerable`1" />
            <inheritdoc cref="T:RGB.NET.Core.IBindable" />
            <inheritdoc cref="T:System.IDisposable" />
            <summary>
            Represents a generic RGB-device.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.Surface">
            <summary>
            Gets the surface this device is attached to.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.DeviceInfo">
            <summary>
            Gets generic information about the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.ColorCorrections">
            <summary>
            Gets a list of color corrections applied to this device.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.Item(RGB.NET.Core.LedId)">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.Led"/> with the specified <see cref="T:RGB.NET.Core.LedId"/>.
            </summary>
            <param name="ledId">The <see cref="T:RGB.NET.Core.LedId"/> of the <see cref="T:RGB.NET.Core.Led"/> to get.</param>
            <returns>The <see cref="T:RGB.NET.Core.Led"/> with the specified <see cref="T:RGB.NET.Core.LedId"/> or null if no <see cref="T:RGB.NET.Core.Led"/> is found.</returns>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.Item(RGB.NET.Core.Point)">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.Led" /> at the specified physical location.
            </summary>
            <param name="location">The <see cref="T:RGB.NET.Core.Point"/> to get the location from.</param>
            <returns>The <see cref="T:RGB.NET.Core.Led"/> at the specified <see cref="T:RGB.NET.Core.Point"/> or null if no location is found.</returns>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.Item(RGB.NET.Core.Rectangle,System.Double)">
            <summary>
            Gets a list of <see cref="T:RGB.NET.Core.Led" /> inside the specified <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
            <param name="referenceRect">The <see cref="T:RGB.NET.Core.Rectangle"/> to check.</param>
            <param name="minOverlayPercentage">The minimal percentage overlay a <see cref="T:RGB.NET.Core.Led"/> must have with the <see cref="T:RGB.NET.Core.Rectangle" /> to be taken into the list.</param>
            <returns>A enumerable of leds inside the specified rectangle.</returns>
        </member>
        <member name="M:RGB.NET.Core.IRGBDevice.Update(System.Boolean)">
            <summary>
            Perform an update for all dirty <see cref="T:RGB.NET.Core.Led"/>, or all <see cref="T:RGB.NET.Core.Led"/> if flushLeds is set to true.
            </summary>
            <param name="flushLeds">Specifies whether all <see cref="T:RGB.NET.Core.Led"/> (including clean ones) should be updated.</param>
        </member>
        <member name="M:RGB.NET.Core.IRGBDevice.AddLed(RGB.NET.Core.LedId,RGB.NET.Core.Point@,RGB.NET.Core.Size@,System.Object)">
            <summary>
            Adds a led to the device.
            </summary>
            <param name="ledId">The id of the led.</param>
            <param name="location">The location of the led on the device.</param>
            <param name="size">The size of the led.</param>
            <param name="customData">Custom data saved on the led.</param>
            <returns>The newly added led or <c>null</c> if a led with this id is already added.</returns>
        </member>
        <member name="M:RGB.NET.Core.IRGBDevice.RemoveLed(RGB.NET.Core.LedId)">
            <summary>
            Removes the led with the specified id from the device.
            </summary>
            <param name="ledId">The id of the led to remove.</param>
            <returns>The removed led or <c>null</c> if there was no led with the specified id.</returns>
        </member>
        <member name="T:RGB.NET.Core.IRGBDevice`1">
            <inheritdoc />
            <summary>
            Represents a generic RGB-device with an known device-info type.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice`1.DeviceInfo">
            <summary>
            Gets generic information about the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IRGBDeviceInfo">
            <summary>
            Represents a generic information for a <see cref="T:RGB.NET.Core.IRGBDevice"/>
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.DeviceType">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.RGBDeviceType"/> of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.DeviceName">
            <summary>
            Unique name of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.Manufacturer">
            <summary>
            Gets the manufacturer-name of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.Model">
            <summary>
            Gets the model-name of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.LayoutMetadata">
            <summary>
            Gets custom metadata added to the layout.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IRGBDeviceProvider">
            <summary>
            Represents a generic device provider.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceProvider.IsInitialized">
            <summary>
            Indicates if the used SDK is initialized and ready to use.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceProvider.ThrowsExceptions">
            <summary>
            Indicates if exceptions in the device provider are thrown or silently ignored.
            </summary>
            <remarks>
            This should only be set to <c>true</c> for debugging/development purposes.
            Production code should use the <see cref="E:RGB.NET.Core.IRGBDeviceProvider.Exception"/>-Event to handle exceptions.
            </remarks>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceProvider.Devices">
            <summary>
            Gets a collection of <see cref="T:RGB.NET.Core.IRGBDevice"/> loaded by this <see cref="T:RGB.NET.Core.IRGBDeviceProvider"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceProvider.UpdateTriggers">
            <summary>
            Gets a collection <see cref="T:RGB.NET.Core.IDeviceUpdateTrigger"/> registered to this device provider.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.IRGBDeviceProvider.Exception">
            <summary>
            Occurs when an exception is thrown in the device provider.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IRGBDeviceProvider.Initialize(RGB.NET.Core.RGBDeviceType,System.Boolean)">
            <summary>
            Initializes the device provider and loads available devices.
            </summary>
            <param name="loadFilter"><see cref="T:RGB.NET.Core.RGBDeviceType"/>-flags to filter the devices to load.</param>
            <param name="throwExceptions">Specifies if exceptions should be thrown or silently be ignored.</param>
            <returns><c>true</c> if the initialization was successful; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:RGB.NET.Core.KeyboardLayoutType">
            <summary>
            Contains a list of available keyboard layout types.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.RGBDeviceType">
            <summary>
            Contains a list of different types of device.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.None">
            <summary>
            Represents nothing.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Keyboard">
            <summary>
            Represents a keyboard.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Mouse">
            <summary>
            Represents a mouse.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Headset">
            <summary>
            Represents a headset.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Mousepad">
            <summary>
            Represents a mousepad.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.LedStripe">
            <summary>
            Represents a LED-stipe.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.LedMatrix">
            <summary>
            Represents a LED-matrix.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Mainboard">
            <summary>
            Represents a Mainboard.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.GraphicsCard">
            <summary>
            Represents a Graphics card.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.DRAM">
            <summary>
            Represents a DRAM-bank.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.HeadsetStand">
            <summary>
            Represents a headset stand.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Keypad">
            <summary>
            Represents a keypad.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Fan">
            <summary>
            Represents a fan.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Speaker">
            <summary>
            Represents a speaker
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Cooler">
            <summary>
            Represents a cooler.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Monitor">
            <summary>
            Represents a monitor.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.LedController">
            <summary>
            Represents a generic led-controller.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Unknown">
            <summary>
            Represents a device where the type is not known or not present in the list.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.All">
            <summary>
            Represents all devices.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.ICooler">
            <summary>
            Represents a cooler-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IDRAM">
            <summary>
            Represents a DRAM-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IFan">
            <summary>
            represents a fan-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IGraphicsCard">
            <summary>
            Represents a graphics-card-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IHeadset">
            <summary>
            Represents a headset-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IHeadsetStand">
            <summary>
            Represents a headset-stand-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IKeyboard">
            <summary>
            Represents a generic keyboard-device.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IKeyboard.DeviceInfo">
            <summary>
            Gets the device information assiciated with this device.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IKeyboardDeviceInfo">
            <summary>
            Represents a generic keyboard device information.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IKeyboardDeviceInfo.Layout">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.KeyboardLayoutType"/> of the keyboard.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IKeypad">
            <summary>
            Represents a keypad-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.ILedMatrix">
            <summary>
            Represents a led-matrix-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.ILedStripe">
            <summary>
            Represents a led-stripe-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IMainboard">
            <summary>
            Represents a mainboard-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IMouse">
            <summary>
            Represents a mouse-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IMousepad">
            <summary>
            Represents a mousepad-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.ISpeaker">
            <summary>
            Represents a speaker-device
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IUnknownDevice">
            <summary>
            Represents a device with unkown or not specified type.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.ExceptionEventArgs">
            <inheritdoc />
            <summary>
            Represents the information supplied with an <see cref="E:RGB.NET.Core.RGBSurface.Exception" />-event.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ExceptionEventArgs.Exception">
            <summary>
            Gets the <see cref="T:System.Exception"/> which is responsible for the event-call.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ExceptionEventArgs.IsCritical">
            <summary>
            Gets a bool indicating if the exception is critical for the thrower.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ExceptionEventArgs.Throw">
            <summary>
            Gets or sets if the exception should be thrown after the event is handled.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ExceptionEventArgs.#ctor(System.Exception,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.ExceptionEventArgs" /> class.
            </summary>
            <param name="exception">The <see cref="T:System.Exception" /> which is responsible for the event-call.</param>
            <param name="isCritical">Indicates if the exception is critical for the thrower.</param>
            <param name="throw">Indicates if the exception should be thrown after the event is handled.</param>
        </member>
        <member name="T:RGB.NET.Core.SurfaceLayoutChangedEventArgs">
            <inheritdoc />
            <summary>
            Represents the information supplied with an <see cref="E:RGB.NET.Core.RGBSurface.SurfaceLayoutChanged" />-event.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.SurfaceLayoutChangedEventArgs.Devices">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.IRGBDevice"/> that caused the change. Returns null if the change isn't caused by a <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.SurfaceLayoutChangedEventArgs.DeviceAdded">
            <summary>
            Gets a value indicating if the event is caused by the addition of a new <see cref="T:RGB.NET.Core.IRGBDevice"/> to the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.SurfaceLayoutChangedEventArgs.DeviceRemoved">
            <summary>
            Gets a value indicating if the event is caused by the removal of a <see cref="T:RGB.NET.Core.IRGBDevice"/> to the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.SurfaceLayoutChangedEventArgs.DeviceChanged">
            <summary>
            Gets a value indicating if the event is caused by a changed location or size of one of the <see cref="T:RGB.NET.Core.IRGBDevice"/> on the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.SurfaceLayoutChangedEventArgs.#ctor(RGB.NET.Core.IRGBDevice,System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.SurfaceLayoutChangedEventArgs" /> class.
            </summary>
            <param name="devices">The <see cref="T:RGB.NET.Core.IRGBDevice" /> that caused the change.</param>
            <param name="deviceAdded">A value indicating if the event is caused by the addition of a new <see cref="T:RGB.NET.Core.IRGBDevice" /> to the <see cref="T:RGB.NET.Core.RGBSurface" />.</param>
            <param name="deviceRemoved">A value indicating if the event is caused by the removal of a <see cref="T:RGB.NET.Core.IRGBDevice" /> from the <see cref="T:RGB.NET.Core.RGBSurface" />.</param>
            <param name="deviceChanged">A value indicating if the event is caused by a change to a <see cref="T:RGB.NET.Core.IRGBDevice" /> on the <see cref="T:RGB.NET.Core.RGBSurface" />.</param>
        </member>
        <member name="T:RGB.NET.Core.UpdatedEventArgs">
            <inheritdoc />
            <summary>
            Represents the information supplied with an <see cref="E:RGB.NET.Core.RGBSurface.Updated" />-event.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.UpdatingEventArgs">
            <inheritdoc />
            <summary>
            Represents the information supplied with an <see cref="E:RGB.NET.Core.RGBSurface.Updating" />-event.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.UpdatingEventArgs.DeltaTime">
            <summary>
            Gets the elapsed time (in seconds) since the last update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.UpdatingEventArgs.Trigger">
            <summary>
            Gets the trigger causing this update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.UpdatingEventArgs.CustomData">
            <summary>
            Gets the custom-data provided by the trigger for this update.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.UpdatingEventArgs.#ctor(System.Double,RGB.NET.Core.IUpdateTrigger,RGB.NET.Core.ICustomUpdateData)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.UpdatingEventArgs" /> class.
            </summary>
            <param name="deltaTime">The elapsed time (in seconds) since the last update.</param>
            <param name="trigger">The trigger causing this update.</param>
            <param name="customData">The custom-data provided by the trigger for this update.</param>
        </member>
        <member name="T:RGB.NET.Core.DeviceProviderException">
            <inheritdoc />
            <summary>
            Represents an exception thrown by a <see cref="T:RGB.NET.Core.IRGBDeviceProvider" />.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceProviderException.IsCritical">
            <summary>
            Gets a bool indicating if the exception is critical and shouldn't be ingored.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.DeviceProviderException.#ctor(System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.DeviceProviderException" /> class.
            </summary>
            <param name="innerException">The exception that is the casue of the current exception or null if this exception was thrown on purpose.</param>
            <param name="isCritical">A value indicating if the exception is critical and shouldn't be ignored.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBDeviceException">
            <inheritdoc />
            <summary>
            Represents an exception thrown by an <see cref="T:RGB.NET.Core.IRGBDevice" />.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBDeviceException.#ctor(System.String,System.Exception)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.RGBDeviceException" /> class.
            </summary>
            <param name="message">The message which describes the reason of throwing this exception.</param>
            <param name="innerException">Optional inner exception, which lead to this exception.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBSurfaceException">
            <inheritdoc />
            <summary>
            Represents an exception thrown by an <see cref="T:RGB.NET.Core.RGBSurface" />.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBSurfaceException.#ctor(System.String,System.Exception)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.RGBSurfaceException" /> class.
            </summary>
            <param name="message">The message which describes the reason of throwing this exception.</param>
            <param name="innerException">Optional inner exception, which lead to this exception.</param>
        </member>
        <member name="T:RGB.NET.Core.ColorExtensions">
            <summary>
            Offers some extensions and helper-methods for <see cref="T:RGB.NET.Core.Color"/> related things.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ColorExtensions.DistanceTo(RGB.NET.Core.Color@,RGB.NET.Core.Color@)">
            <summary>
            Calculates the distance between the two specified colors using the redmean algorithm.
            For more infos check https://www.compuphase.com/cmetric.htm
            </summary>
            <param name="color1">The start color of the distance calculation.</param>
            <param name="color2">The end color fot the distance calculation.</param>
            <returns>The redmean distance between the two specified colors.</returns>
        </member>
        <member name="T:RGB.NET.Core.CustomUpdateDataExtension">
            <summary>
            Offers some extensions for easier use of <see cref="T:RGB.NET.Core.CustomUpdateData"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.CustomUpdateDataExtension.FlushLeds(RGB.NET.Core.CustomUpdateData,System.Boolean)">
            <summary>
            Sets the <see cref="F:RGB.NET.Core.CustomUpdateDataIndex.FLUSH_LEDS"/>-Parameter to the given value.
            </summary>
            <param name="customUpdateData">The update-data to modify.</param>
            <param name="value">The value to set.</param>
            <returns>The modified update-data.</returns>
        </member>
        <member name="M:RGB.NET.Core.CustomUpdateDataExtension.Render(RGB.NET.Core.CustomUpdateData,System.Boolean)">
            <summary>
            Sets the <see cref="F:RGB.NET.Core.CustomUpdateDataIndex.RENDER"/>-Parameter to the given value.
            </summary>
            <param name="customUpdateData">The update-data to modify.</param>
            <param name="value">The value to set.</param>
            <returns>The modified update-data.</returns>
        </member>
        <member name="M:RGB.NET.Core.CustomUpdateDataExtension.UpdateDevices(RGB.NET.Core.CustomUpdateData,System.Boolean)">
            <summary>
            Sets the <see cref="F:RGB.NET.Core.CustomUpdateDataIndex.UPDATE_DEVICES"/>-Parameter to the given value.
            </summary>
            <param name="customUpdateData">The update-data to modify.</param>
            <param name="value">The value to set.</param>
            <returns>The modified update-data.</returns>
        </member>
        <member name="M:RGB.NET.Core.CustomUpdateDataExtension.Heartbeat(RGB.NET.Core.CustomUpdateData,System.Boolean)">
            <summary>
            Sets the <see cref="F:RGB.NET.Core.CustomUpdateDataIndex.HEARTBEAT"/>-Parameter to the given value.
            </summary>
            <param name="customUpdateData">The update-data to modify.</param>
            <param name="value">The value to set.</param>
            <returns>The modified update-data.</returns>
        </member>
        <member name="T:RGB.NET.Core.FloatExtensions">
            <summary>
            Offers some extensions and helper-methods for the work with floats.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.FloatExtensions.TOLERANCE">
            <summary>
            Defines the precision RGB.NET processes floating point comparisons in.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.FloatExtensions.EqualsInTolerance(System.Single,System.Single)">
            <summary>
            Checks if two values are equal respecting the <see cref="F:RGB.NET.Core.FloatExtensions.TOLERANCE"/>.
            </summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The first value to compare.</param>
            <returns><c>true</c> if the difference is smaller than the <see cref="F:RGB.NET.Core.FloatExtensions.TOLERANCE"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.FloatExtensions.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Clamps the provided value to be bigger or equal min and smaller or equal max.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The lower value of the range the value is clamped to.</param>
            <param name="max">The higher value of the range the value is clamped to.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:RGB.NET.Core.FloatExtensions.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            Clamps the provided value to be bigger or equal min and smaller or equal max.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The lower value of the range the value is clamped to.</param>
            <param name="max">The higher value of the range the value is clamped to.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:RGB.NET.Core.FloatExtensions.Wrap(System.Single,System.Single,System.Single)">
            <summary>
            Enforces the provided value to be in the specified range by wrapping it around the edges if it exceeds them.
            </summary>
            <param name="value">The value to wrap.</param>
            <param name="min">The lower value of the range the value is wrapped into.</param>
            <param name="max">The higher value of the range the value is wrapped into.</param>
            <returns>The wrapped value.</returns>
        </member>
        <member name="M:RGB.NET.Core.FloatExtensions.GetByteValueFromPercentage(System.Single)">
            <summary>
            Converts a normalized float value in the range [0..1] to a byte [0..255].
            </summary>
            <param name="percentage">The normalized float value to convert.</param>
            <returns>The byte value.</returns>
        </member>
        <member name="M:RGB.NET.Core.FloatExtensions.GetPercentageFromByteValue(System.Byte)">
            <summary>
            Converts a byte value [0..255] to a normalized float value in the range [0..1].
            </summary>
            <param name="value">The byte value to convert.</param>
            <returns>The normalized float value.</returns>
        </member>
        <member name="T:RGB.NET.Core.PointExtensions">
            <summary>
            Offers some extensions and helper-methods for <see cref="T:RGB.NET.Core.Point"/> related things.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.PointExtensions.Translate(RGB.NET.Core.Point@,System.Single,System.Single)">
            <summary>
            Moves the specified <see cref="T:RGB.NET.Core.Point"/> by the specified amount.
            </summary>
            <param name="point">The <see cref="T:RGB.NET.Core.Point"/> to move.</param>
            <param name="x">The x-ammount to move.</param>
            <param name="y">The y-ammount to move.</param>
            <returns>The new location of the point.</returns>
        </member>
        <member name="M:RGB.NET.Core.PointExtensions.Rotate(RGB.NET.Core.Point@,RGB.NET.Core.Rotation@,RGB.NET.Core.Point@)">
            <summary>
            Rotates the specified <see cref="T:RGB.NET.Core.Point"/> by the specified amuont around the specified origin.
            </summary>
            <param name="point">The <see cref="T:RGB.NET.Core.Point"/> to rotate.</param>
            <param name="rotation">The rotation.</param>
            <param name="origin">The origin to rotate around. [0,0] if not set.</param>
            <returns>The new location of the point.</returns>
        </member>
        <member name="T:RGB.NET.Core.RectangleExtensions">
            <summary>
            Offers some extensions and helper-methods for the work with rectangles.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.SetLocation(RGB.NET.Core.Rectangle@,RGB.NET.Core.Point@)">
            <summary>
            Sets the <see cref="P:RGB.NET.Core.Rectangle.Location"/> of the specified rectangle.
            </summary>
            <param name="rect">The rectangle to modify.</param>
            <param name="location">The new location of the rectangle.</param>
            <returns>The modified <see cref="T:RGB.NET.Core.Rectangle"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.SetX(RGB.NET.Core.Rectangle@,System.Single)">
            <summary>
            Sets the <see cref="P:RGB.NET.Core.Point.X"/> of the <see cref="P:RGB.NET.Core.Rectangle.Location"/> of the specified rectangle.
            </summary>
            <param name="rect">The rectangle to modify.</param>
            <param name="x">The new x-location of the rectangle.</param>
            <returns>The modified <see cref="T:RGB.NET.Core.Rectangle"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.SetY(RGB.NET.Core.Rectangle@,System.Single)">
            <summary>
            Sets the <see cref="P:RGB.NET.Core.Point.Y"/> of the <see cref="P:RGB.NET.Core.Rectangle.Location"/> of the specified rectangle.
            </summary>
            <param name="rect">The rectangle to modify.</param>
            <param name="y">The new y-location of the rectangle.</param>
            <returns>The modified <see cref="T:RGB.NET.Core.Rectangle"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.SetSize(RGB.NET.Core.Rectangle@,RGB.NET.Core.Size@)">
            <summary>
            Sets the <see cref="P:RGB.NET.Core.Rectangle.Size"/> of the specified rectangle.
            </summary>
            <param name="rect">The rectangle to modify.</param>
            <param name="size">The new size of the rectangle.</param>
            <returns>The modified <see cref="T:RGB.NET.Core.Rectangle"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.SetWidth(RGB.NET.Core.Rectangle@,System.Single)">
            <summary>
            Sets the <see cref="P:RGB.NET.Core.Size.Width"/> of the <see cref="P:RGB.NET.Core.Rectangle.Size"/> of the specified rectangle.
            </summary>
            <param name="rect">The rectangle to modify.</param>
            <param name="width">The new width of the rectangle.</param>
            <returns>The modified <see cref="T:RGB.NET.Core.Rectangle"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.SetHeight(RGB.NET.Core.Rectangle@,System.Single)">
            <summary>
            Sets the <see cref="P:RGB.NET.Core.Size.Height"/> of the <see cref="P:RGB.NET.Core.Rectangle.Size"/> of the specified rectangle.
            </summary>
            <param name="rect">The rectangle to modify.</param>
            <param name="height">The new height of the rectangle.</param>
            <returns>The modified <see cref="T:RGB.NET.Core.Rectangle"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.CalculateIntersectPercentage(RGB.NET.Core.Rectangle@,RGB.NET.Core.Rectangle@)">
            <summary>
            Calculates the percentage of intersection of a rectangle.
            </summary>
            <param name="rect">The rectangle to calculate the intersection for.</param>
            <param name="intersectingRect">The intersecting rectangle.</param>
            <returns>The percentage of intersection.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.CalculateIntersection(RGB.NET.Core.Rectangle@,RGB.NET.Core.Rectangle@)">
            <summary>
            Calculates the <see cref="T:RGB.NET.Core.Rectangle"/> representing the intersection of this <see cref="T:RGB.NET.Core.Rectangle"/> and the one provided as parameter.
            </summary>
            <param name="rect">The rectangle to calculate the intersection for.</param>
            <param name="intersectingRectangle">The intersecting <see cref="T:RGB.NET.Core.Rectangle"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Rectangle"/> representing the intersection this <see cref="T:RGB.NET.Core.Rectangle"/> and the one provided as parameter.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.Contains(RGB.NET.Core.Rectangle@,RGB.NET.Core.Point@)">
            <summary>
            Determines if the specified <see cref="T:RGB.NET.Core.Point"/> is contained within this <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
            <param name="rect">The containing rectangle.</param>
            <param name="point">The <see cref="T:RGB.NET.Core.Point"/> to test.</param>
            <returns><c>true</c> if the rectangle contains the specified point; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.Contains(RGB.NET.Core.Rectangle@,System.Single,System.Single)">
            <summary>
            Determines if the specified location is contained within this <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
            <param name="rect">The containing rectangle.</param>
            <param name="x">The X-location to test.</param>
            <param name="y">The Y-location to test.</param>
            <returns><c>true</c> if the rectangle contains the specified coordinates; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.Contains(RGB.NET.Core.Rectangle@,RGB.NET.Core.Rectangle@)">
            <summary>
            Determines if the specified <see cref="T:RGB.NET.Core.Rectangle"/> is contained within this <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
            <param name="rect">The containing rectangle.</param>
            <param name="rect2">The <see cref="T:RGB.NET.Core.Rectangle"/> to test.</param>
            <returns><c>true</c> if the rectangle contains the specified rect; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.Translate(RGB.NET.Core.Rectangle@,RGB.NET.Core.Point@)">
            <summary>
            Moves the specified <see cref="T:RGB.NET.Core.Rectangle"/> by the specified amount.
            </summary>
            <param name="rect">The <see cref="T:RGB.NET.Core.Rectangle"/> to move.</param>
            <param name="point">The amount to move.</param>
            <returns>The moved rectangle.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.Translate(RGB.NET.Core.Rectangle@,System.Single,System.Single)">
            <summary>
            Moves the specified <see cref="T:RGB.NET.Core.Rectangle"/> by the specified amount.
            </summary>
            <param name="rect">The <see cref="T:RGB.NET.Core.Rectangle"/> to move.</param>
            <param name="x">The x-ammount to move.</param>
            <param name="y">The y-ammount to move.</param>
            <returns>The moved rectangle.</returns>
        </member>
        <member name="M:RGB.NET.Core.RectangleExtensions.Rotate(RGB.NET.Core.Rectangle@,RGB.NET.Core.Rotation@,RGB.NET.Core.Point@)">
            <summary>
            Rotates the specified <see cref="T:RGB.NET.Core.Rectangle"/> by the specified amuont around the specified origin.
            </summary>
            <remarks>
            The returned array of <see cref="T:RGB.NET.Core.Point"/> is filled with the new locations of the rectangle clockwise starting from the top left:
            [0] = top left
            [1] = top right
            [2] = bottom right
            [3] = bottom left
            </remarks>
            <param name="rect">The <see cref="T:RGB.NET.Core.Rectangle"/> to rotate.</param>
            <param name="rotation">The rotation.</param>
            <param name="origin">The origin to rotate around. [0,0] if not set.</param>
            <returns>A array of <see cref="T:RGB.NET.Core.Point"/> containing the new locations of the corners of the original rectangle.</returns>
        </member>
        <member name="T:RGB.NET.Core.SurfaceExtensions">
            <summary>
            Offers some extensions and helper-methods for the work with the surface.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.SurfaceExtensions.Load(RGB.NET.Core.RGBSurface,RGB.NET.Core.IRGBDeviceProvider,RGB.NET.Core.RGBDeviceType,System.Boolean)">
            <summary>
            Initializes the specifiec device provider and attaches all devices.
            </summary>
            <param name="surface">The surface to attach the devices to.</param>
            <param name="deviceProvider">The device provider to load.</param>
            <param name="loadFilter"><see cref="T:RGB.NET.Core.RGBDeviceType"/>-flags to filter the devices to load.</param>
            <param name="throwExceptions">Specifies if exceptions should be thrown or silently be ignored.</param>
        </member>
        <member name="M:RGB.NET.Core.SurfaceExtensions.Attach(RGB.NET.Core.RGBSurface,System.Collections.Generic.IEnumerable{RGB.NET.Core.IRGBDevice})">
            <summary>
            Attaches the specified devices to the surface.
            </summary>
            <param name="surface">The surface the devices are attached to.</param>
            <param name="devices">The devices to attach.</param>
        </member>
        <member name="M:RGB.NET.Core.SurfaceExtensions.Detach(RGB.NET.Core.RGBSurface,System.Collections.Generic.IEnumerable{RGB.NET.Core.IRGBDevice})">
            <summary>
            Detaches the specified devices from the surface.
            </summary>
            <param name="surface">The surface the devices are detached from.</param>
            <param name="devices">The devices to detach.</param>
        </member>
        <member name="M:RGB.NET.Core.SurfaceExtensions.GetDevices``1(RGB.NET.Core.RGBSurface)">
            <summary>
            Gets all devices of a specific type.
            </summary>
            <typeparam name="T">The type of devices to get.</typeparam>
            <returns>A collection of devices with the specified type.</returns>
        </member>
        <member name="M:RGB.NET.Core.SurfaceExtensions.GetDevices(RGB.NET.Core.RGBSurface,RGB.NET.Core.RGBDeviceType)">
            <summary>
            Gets all devices of the specified <see cref="T:RGB.NET.Core.RGBDeviceType"/>.
            </summary>
            <param name="surface">The surface to get the devices from.</param>
            <param name="deviceType">The <see cref="T:RGB.NET.Core.RGBDeviceType"/> of the devices to get.</param>
            <returns>A collection of devices matching the specified <see cref="T:RGB.NET.Core.RGBDeviceType"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.SurfaceExtensions.AlignDevices(RGB.NET.Core.RGBSurface)">
            <summary>
            Automatically aligns all devices to prevent overlaps.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.AbstractLedGroup">
            <inheritdoc cref="T:RGB.NET.Core.AbstractDecoratable`1" />
            <inheritdoc cref="T:RGB.NET.Core.ILedGroup" />
            <summary>
            Represents a generic <see cref="T:RGB.NET.Core.AbstractLedGroup" />.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractLedGroup.Surface">
            <inheritdoc cref="P:RGB.NET.Core.ILedGroup.Surface" />
        </member>
        <member name="P:RGB.NET.Core.AbstractLedGroup.Brush">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractLedGroup.ZIndex">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.#ctor(RGB.NET.Core.RGBSurface)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.AbstractLedGroup"/> class.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.GetLeds">
            <summary>
            Gets a enumerable containing all leds in this group.
            </summary>
            <returns>A enumerable containing all leds of this group.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.OnAttach">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.OnDetach">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.ToList">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.RGB#NET#Core#ILedGroup#ToListUnsafe(System.Collections.Generic.IList{RGB.NET.Core.Led}@)">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.ILedGroup">
            <summary>
            Represents a generic ledgroup.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ILedGroup.Surface">
            <summary>
            Gets the surface this group is attached to or <c>null</c> if it is not attached to any surface.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ILedGroup.IsAttached">
            <summary>
            Gets a bool indicating if the group is attached to a surface.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ILedGroup.Brush">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.IBrush"/> which should be drawn over this <see cref="T:RGB.NET.Core.ILedGroup"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ILedGroup.ZIndex">
            <summary>
            Gets or sets the z-index of this <see cref="T:RGB.NET.Core.ILedGroup"/> to allow ordering them before drawing. (lowest first) (default: 0)
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ILedGroup.OnAttach">
            <summary>
            Called when the <see cref="T:RGB.NET.Core.ILedGroup"/> is attached to the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ILedGroup.OnDetach">
            <summary>
            Called when the <see cref="T:RGB.NET.Core.ILedGroup"/> is detached from the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ILedGroup.ToList">
            <summary>
            Returns a list containing all <see cref="T:RGB.NET.Core.Led"/> in this group.
            </summary>
            <returns>A list containing all <see cref="T:RGB.NET.Core.Led"/> in this group.</returns>
        </member>
        <member name="T:RGB.NET.Core.LedGroupExtension">
            <summary>
            Offers some extensions and helper-methods for <see cref="T:RGB.NET.Core.ILedGroup"/> related things.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.LedGroupExtension.ToListLedGroup(RGB.NET.Core.ILedGroup)">
            <summary>
            Converts the specified <see cref="T:RGB.NET.Core.ILedGroup" /> to a <see cref="T:RGB.NET.Core.ListLedGroup" />.
            </summary>
            <param name="ledGroup">The <see cref="T:RGB.NET.Core.ILedGroup" /> to convert.</param>
            <returns>The converted <see cref="T:RGB.NET.Core.ListLedGroup" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.LedGroupExtension.Exclude(RGB.NET.Core.ILedGroup,RGB.NET.Core.Led[])">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.ListLedGroup" /> which contains all <see cref="T:RGB.NET.Core.Led"/> from the specified <see cref="T:RGB.NET.Core.ILedGroup"/> excluding the specified ones.
            </summary>
            <param name="ledGroup">The base <see cref="T:RGB.NET.Core.ILedGroup"/>.</param>
            <param name="ledIds">The <see cref="T:RGB.NET.Core.Led"/> to exclude.</param>
            <returns>The new <see cref="T:RGB.NET.Core.ListLedGroup" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.LedGroupExtension.Attach(RGB.NET.Core.ILedGroup,RGB.NET.Core.RGBSurface)">
            <summary>
            Attaches the specified <see cref="T:RGB.NET.Core.ILedGroup"/> to the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
            <param name="ledGroup">The <see cref="T:RGB.NET.Core.ILedGroup"/> to attach.</param>
            <param name="surface">The <see cref="T:RGB.NET.Core.RGBSurface"/> to attach this group to.</param>
            <returns><c>true</c> if the <see cref="T:RGB.NET.Core.ILedGroup"/> could be attached; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.LedGroupExtension.Detach(RGB.NET.Core.ILedGroup)">
            <summary>
            Detaches the specified <see cref="T:RGB.NET.Core.ILedGroup"/> from the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
            <param name="ledGroup">The <see cref="T:RGB.NET.Core.ILedGroup"/> to attach.</param>
            <returns><c>true</c> if the <see cref="T:RGB.NET.Core.ILedGroup"/> could be detached; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:RGB.NET.Core.ListLedGroup">
            <inheritdoc />
            <summary>
            Represents a ledgroup containing arbitrary <see cref="T:RGB.NET.Core.Led" />.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ListLedGroup.GroupLeds">
            <summary>
            Gets the list containing the <see cref="T:RGB.NET.Core.Led"/> of this <see cref="T:RGB.NET.Core.ListLedGroup"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.#ctor(RGB.NET.Core.RGBSurface)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Groups.ListLedGroup" /> class.
            </summary>
            <param name="surface">Specifies the surface to attach this group to or <c>null</c> if the group should not be attached on creation.</param>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.#ctor(RGB.NET.Core.RGBSurface,System.Collections.Generic.IEnumerable{RGB.NET.Core.Led})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Groups.ListLedGroup" /> class.
            </summary>
            <param name="surface">Specifies the surface to attach this group to or <c>null</c> if the group should not be attached on creation.</param>
            <param name="leds">The initial <see cref="T:RGB.NET.Core.Led" /> of this <see cref="T:RGB.NET.Groups.ListLedGroup" />.</param>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.#ctor(RGB.NET.Core.RGBSurface,RGB.NET.Core.Led[])">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Groups.ListLedGroup" /> class.
            </summary>
            <param name="surface">Specifies the surface to attach this group to or <c>null</c> if the group should not be attached on creation.</param>
            <param name="leds">The initial <see cref="T:RGB.NET.Core.Led" /> of this <see cref="T:RGB.NET.Groups.ListLedGroup" />.</param>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.AddLed(RGB.NET.Core.Led[])">
            <summary>
            Adds the specified LED(s) to this <see cref="T:RGB.NET.Core.ListLedGroup"/>.
            </summary>
            <param name="leds">The LED(s) to add.</param>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.AddLeds(System.Collections.Generic.IEnumerable{RGB.NET.Core.Led})">
            <summary>
            Adds the specified <see cref="T:RGB.NET.Core.Led"/> to this <see cref="T:RGB.NET.Core.ListLedGroup"/>.
            </summary>
            <param name="leds">The <see cref="T:RGB.NET.Core.Led"/> to add.</param>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.RemoveLed(RGB.NET.Core.Led[])">
            <summary>
            Removes the specified LED(s) from this <see cref="T:RGB.NET.Core.ListLedGroup"/>.
            </summary>
            <param name="leds">The LED(s) to remove.</param>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.RemoveLeds(System.Collections.Generic.IEnumerable{RGB.NET.Core.Led})">
            <summary>
            Removes the specified <see cref="T:RGB.NET.Core.Led"/> from this <see cref="T:RGB.NET.Core.ListLedGroup"/>.
            </summary>
            <param name="leds">The <see cref="T:RGB.NET.Core.Led"/> to remove.</param>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.ContainsLed(RGB.NET.Core.Led)">
            <summary>
            Checks if a specified LED is contained by this ledgroup.
            </summary>
            <param name="led">The LED which should be checked.</param>
            <returns><c>true</c> if the LED is contained by this ledgroup; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.MergeLeds(RGB.NET.Core.ILedGroup)">
            <summary>
            Merges the <see cref="T:RGB.NET.Core.Led"/> from the specified ledgroup in this ledgroup. 
            </summary>
            <param name="groupToMerge">The ledgroup to merge.</param>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.GetLeds">
            <inheritdoc />
            <summary>
            Gets a list containing the <see cref="T:RGB.NET.Core.Led" /> from this group.
            </summary>
            <returns>The list containing the <see cref="T:RGB.NET.Core.Led" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.ListLedGroup.ToList">
            <inheritdoc />
            <summary>
            Gets a list containing the <see cref="T:RGB.NET.Core.Led" /> from this group.
            </summary>
            <returns>The list containing the <see cref="T:RGB.NET.Core.Led" />.</returns>
        </member>
        <member name="T:RGB.NET.Core.ConversionHelper">
            <summary>
            Contains helper methods for converting things.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ConversionHelper.ToHex(System.Byte[])">
            <summary>
            Converts an array of bytes to a HEX-representation.
            </summary>
            <param name="bytes">The array of bytes.</param>
            <returns>The HEX-representation of the provided bytes.</returns>
        </member>
        <member name="M:RGB.NET.Core.ConversionHelper.HexToBytes(System.ReadOnlySpan{System.Char})">
            <summary>
            Converts the HEX-representation of a byte array to that array.
            </summary>
            <param name="hexString">The HEX-string to convert.</param>
            <returns>The correspondending byte array.</returns>
        </member>
        <member name="T:RGB.NET.Core.DeviceHelper">
            <summary>
            Offsers some helper methods for device creation.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.DeviceHelper.CreateDeviceName(System.String,System.String)">
            <summary>
            Creates a unique device name from a manufacturer and model name.
            </summary>
            <remarks>
            The id is made unique based on the assembly calling this method.
            </remarks>
            <param name="manufacturer">The manufacturer of the device.</param>
            <param name="model">The model of the device.</param>
            <returns>The unique identifier for this device.</returns>
        </member>
        <member name="T:RGB.NET.Core.TimerHelper">
            <summary>
            Offers some helper methods for timed operations.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.TimerHelper.UseHighResolutionTimers">
            <summary>
            Gets or sets if High Resolution Timers should be used.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.TimerHelper.Execute(System.Action,System.Double)">
            <summary>
            Executes the provided action and blocks if needed until the the <see param="targetExecuteTime"/> has passed.
            </summary>
            <param name="action">The action to execute.</param>
            <param name="targetExecuteTime">The time in ms this method should block. default: 0</param>
            <returns>The time in ms spent executing the <see param="action"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.TimerHelper.GetElapsedTime(System.Int64)">
            <summary>
            Calculates the elapsed time in ms from the provided timestamp until now.
            </summary>
            <param name="initialTimestamp">The initial timestamp to calculate the time from.</param>
            <returns>The elapsed time in ms.</returns>
        </member>
        <member name="M:RGB.NET.Core.TimerHelper.RequestHighResolutionTimer">
            <summary>
            Requests to use to use High Resolution Timers if enabled.
            IMPORTANT: Always dispose the returned disposable if High Resolution Timers are no longer needed for the caller.
            </summary>
            <returns>A disposable to remove the request.</returns>
        </member>
        <member name="M:RGB.NET.Core.TimerHelper.DisposeAllHighResolutionTimerRequests">
            <summary>
            Disposes all open High Resolution Timer Requests.
            This should be called once when exiting the application to make sure nothing remains open and the application correctly unregisters itself on OS level.
            Shouldn't be needed if everything is disposed, but better safe then sorry.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IdGenerator">
            <summary>
            Offers some methods to create and handle unique identifiers.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IdGenerator.MakeUnique(System.String)">
            <summary>
            Makes the specified id unique based on the calling assembly by adding a counter if needed.
            </summary>
            <param name="id">The id to make unique.</param>
            <returns>The unique id.</returns>
        </member>
        <member name="M:RGB.NET.Core.IdGenerator.ResetCounter">
            <summary>
            Resets the counter used to create unique ids.
            All previous generated ids are not garantueed to stay unique if this is called!
            </summary>
        </member>
        <member name="T:RGB.NET.Core.Led">
            <inheritdoc />
            <summary>
            Represents a single LED of a RGB-device.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.Device">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.IRGBDevice"/> this <see cref="T:RGB.NET.Core.Led"/> is associated with.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.Id">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.LedId"/> of the <see cref="T:RGB.NET.Core.Led" />.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.Shape">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.Shape"/> of the <see cref="T:RGB.NET.Core.Led"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.ShapeData">
            <summary>
            Gets or sets the data used for by the <see cref="F:RGB.NET.Core.Shape.Custom"/>-<see cref="T:RGB.NET.Core.Shape"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.AbsoluteBoundary">
            <summary>
            Gets a rectangle representing the logical location of the <see cref="T:RGB.NET.Core.Led"/> on the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.IsDirty">
            <summary>
            Indicates whether the <see cref="T:RGB.NET.Core.Led" /> is about to change it's color.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.RequestedColor">
            <summary>
            Gets a copy of the <see cref="T:RGB.NET.Core.Color"/> the LED should be set to on the next update.
            Null if there is no update-request for the next update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.Color">
            <summary>
            Gets the current <see cref="T:RGB.NET.Core.Color"/> of the <see cref="T:RGB.NET.Core.Led"/>. Sets the <see cref="P:RGB.NET.Core.Led.RequestedColor" /> for the next update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.CustomData">
            <summary>
            Gets the provider-specific data associated with this led.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.LayoutMetadata">
            <summary>
            Gets or sets some custom metadata of this led.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Led.#ctor(RGB.NET.Core.IRGBDevice,RGB.NET.Core.LedId,RGB.NET.Core.Point,RGB.NET.Core.Size,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Led"/> class.
            </summary>
            <param name="device">The <see cref="T:RGB.NET.Core.IRGBDevice"/> the <see cref="T:RGB.NET.Core.Led"/> is associated with.</param>
            <param name="id">The <see cref="T:RGB.NET.Core.LedId"/> of the <see cref="T:RGB.NET.Core.Led"/>.</param>
            <param name="location">The physical location of the <see cref="T:RGB.NET.Core.Led"/> relative to the <see cref="P:RGB.NET.Core.Led.Device"/>.</param>
            <param name="size">The size of the <see cref="T:RGB.NET.Core.Led"/>.</param>
            <param name="customData">The provider-specific data associated with this led.</param>
        </member>
        <member name="M:RGB.NET.Core.Led.UpdateActualPlaceableData">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.Led.ToString">
            <summary>
            Converts the <see cref="P:RGB.NET.Core.Led.Id"/> and the <see cref="P:RGB.NET.Core.Led.Color"/> of this <see cref="T:RGB.NET.Core.Led"/> to a human-readable string.
            </summary>
            <returns>A string that contains the <see cref="P:RGB.NET.Core.Led.Id"/> and the <see cref="P:RGB.NET.Core.Led.Color"/> of this <see cref="T:RGB.NET.Core.Led"/>. For example "Enter [A: 255, R: 255, G: 0, B: 0]".</returns>
        </member>
        <member name="M:RGB.NET.Core.Led.Update">
            <summary>
            Updates the <see cref="T:RGB.NET.Core.Led"/> to the requested <see cref="T:RGB.NET.Core.Color"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Led.op_Implicit(RGB.NET.Core.Led)~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:RGB.NET.Core.Led" /> to a <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <param name="led">The <see cref="T:RGB.NET.Core.Led"/> to convert.</param>
        </member>
        <member name="M:RGB.NET.Core.Led.op_Implicit(RGB.NET.Core.Led)~RGB.NET.Core.Rectangle">
            <summary>
            Converts a <see cref="T:RGB.NET.Core.Led" /> to a <see cref="T:RGB.NET.Core.Rectangle" />.
            </summary>
            <param name="led">The <see cref="T:RGB.NET.Core.Led"/> to convert.</param>
        </member>
        <member name="T:RGB.NET.Core.LedMapping`1">
            <summary>
            Represents a mapping from <see cref="T:RGB.NET.Core.LedId"/> to a custom identifier.
            </summary>
            <typeparam name="T">The identifier the <see cref="T:RGB.NET.Core.LedId"/> is mapped to.</typeparam>
        </member>
        <member name="P:RGB.NET.Core.LedMapping`1.Count">
            <summary>
            Gets the number of entries in this mapping.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.LedMapping`1.LedIds">
            <summary>
            Gets a collection of all mapped ledids.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.LedMapping`1.Mappings">
            <summary>
            Gets a collection of all mapped custom identifiers.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.LedMapping`1.Item(RGB.NET.Core.LedId)">
            <summary>
            Gets the custom identifier mapped to the specified <see cref="T:RGB.NET.Core.LedId"/>.
            </summary>
            <param name="ledId">The led id to get the mapped identifier.</param>
            <returns>The mapped ifentifier.</returns>
        </member>
        <member name="P:RGB.NET.Core.LedMapping`1.Item(`0)">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.LedId"/> mapped to the specified custom identifier.
            </summary>
            <param name="mapping">The custom identifier to get the mapped led id.</param>
            <returns>The led id.</returns>
        </member>
        <member name="M:RGB.NET.Core.LedMapping`1.Add(RGB.NET.Core.LedId,`0)">
            <summary>
            Adds a new entry to the mapping.
            </summary>
            <param name="ledId">The <see cref="T:RGB.NET.Core.LedId"/> to map.</param>
            <param name="mapping">The custom identifier to map.</param>
        </member>
        <member name="M:RGB.NET.Core.LedMapping`1.Contains(RGB.NET.Core.LedId)">
            <summary>
            Checks if the specified <see cref="T:RGB.NET.Core.LedId"/> is mapped.
            </summary>
            <param name="ledId">The led id to check.</param>
            <returns><c>true</c> if the led id is mapped; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.LedMapping`1.Contains(`0)">
            <summary>
            Checks if the specified custom identifier is mapped.
            </summary>
            <param name="mapping">The custom identifier to check.</param>
            <returns><c>true</c> if the led id is mapped; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.LedMapping`1.TryGetValue(RGB.NET.Core.LedId,`0@)">
            <summary>
            Gets the custom identifier mapped to the specified led id.
            </summary>
            <param name="ledId">The led id to get the custom identifier  for.</param>
            <param name="mapping">Contains the mapped custom identifier or null if there is no mapping for the specified led id.</param>
            <returns><c>true</c> if there was a custom identifier  for the specified led id; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.LedMapping`1.TryGetValue(`0,RGB.NET.Core.LedId@)">
            <summary>
            Gets the led id mapped to the specified custom identifier.
            </summary>
            <param name="mapping">The custom identifier to get the led id for.</param>
            <param name="ledId">Contains the mapped led id or null if there is no mapping for the specified led id.</param>
            <returns><c>true</c> if there was a led id for the specified custom identifier; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.LedMapping`1.Remove(RGB.NET.Core.LedId)">
            <summary>
            Removes the specified led id and the mapped custom identifier.
            </summary>
            <param name="ledId">The led id to remove.</param>
            <returns><c>true</c> if there was a mapping for the led id to remove; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.LedMapping`1.Remove(`0)">
            <summary>
            Removes the specified custom identifier and the mapped led id.
            </summary>
            <param name="mapping">The custom identifier to remove.</param>
            <returns><c>true</c> if there was a mapping for the custom identifier to remove; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.LedMapping`1.Clear">
            <summary>
            Removes all registered mappings.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.LedMapping`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractReferenceCounting.ActiveReferenceCount">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractReferenceCounting.AddReferencingObject(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractReferenceCounting.RemoveReferencingObject(System.Object)">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.IReferenceCounting.ActiveReferenceCount">
            <summary>
            Gets the amount of currently registered referencing objects.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IReferenceCounting.AddReferencingObject(System.Object)">
            <summary>
            Adds the given object to the list of referencing objects.
            </summary>
            <param name="obj">The object to add.</param>
        </member>
        <member name="M:RGB.NET.Core.IReferenceCounting.RemoveReferencingObject(System.Object)">
            <summary>
            Removes the given object from the list of referencing objects.
            </summary>
            <param name="obj">The object to remove.</param>
        </member>
        <member name="T:RGB.NET.Core.AbstractBindable">
            <inheritdoc />
            <summary>
            Represents a basic bindable class which notifies when a property value changes.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.AbstractBindable.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractBindable.RequiresUpdate``1(``0@,``0)">
            <summary>
            Checks if the property already matches the desired value or needs to be updated.
            </summary>
            <typeparam name="T">Type of the property.</typeparam>
            <param name="storage">Reference to the backing-filed.</param>
            <param name="value">Value to apply.</param>
            <returns><c>true</c> if the value needs to be updated; otherweise <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractBindable.SetProperty``1(``0@,``0,System.String)">
            <summary>
            Checks if the property already matches the desired value and updates it if not.
            </summary>
            <typeparam name="T">Type of the property.</typeparam>
            <param name="storage">Reference to the backing-filed.</param>
            <param name="value">Value to apply.</param>
            <param name="propertyName">Name of the property used to notify listeners. This value is optional 
            and can be provided automatically when invoked from compilers that support <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/>.</param>
            <returns><c>true</c> if the value was changed, <c>false</c> if the existing value matched the desired value.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractBindable.OnPropertyChanged(System.String)">
            <summary>
            Triggers the <see cref="E:RGB.NET.Core.AbstractBindable.PropertyChanged"/>-event when a a property value has changed.
            </summary>
            <param name="propertyName">Name of the property used to notify listeners. This value is optional 
            and can be provided automatically when invoked from compilers that support <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/>.</param>
        </member>
        <member name="T:RGB.NET.Core.IBindable">
            <summary>
            Represents a basic bindable class which notifies when a property value changes.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IPlaceable">
            <summary>
            Represents a generic placeable element.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IPlaceable.Location">
            <summary>
            Gets or sets the location of the <see cref="T:RGB.NET.Core.IPlaceable"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IPlaceable.Size">
            <summary>
            Gets the size of the <see cref="T:RGB.NET.Core.IPlaceable"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IPlaceable.Scale">
            <summary>
            Gets or sets the scale of the <see cref="T:RGB.NET.Core.IPlaceable"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IPlaceable.Rotation">
            <summary>
            Gets or sets the rotation of the <see cref="T:RGB.NET.Core.IPlaceable"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IPlaceable.ActualLocation">
            <summary>
            Gets  the actual location of the <see cref="T:RGB.NET.Core.IPlaceable"/>.
            This includes the <see cref="P:RGB.NET.Core.IPlaceable.Rotation"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IPlaceable.ActualSize">
            <summary>
            Gets the actual <see cref="P:RGB.NET.Core.IPlaceable.Size"/> of the <see cref="T:RGB.NET.Core.IPlaceable"/>.
            This includes the <see cref="P:RGB.NET.Core.IPlaceable.Scale"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IPlaceable.Boundary">
            <summary>
            Gets a rectangle containing the whole <see cref="T:RGB.NET.Core.IPlaceable"/>.
            This includes <see cref="P:RGB.NET.Core.IPlaceable.Location"/>, <see cref="P:RGB.NET.Core.IPlaceable.Size"/>, <see cref="P:RGB.NET.Core.IPlaceable.Scale"/> and <see cref="P:RGB.NET.Core.IPlaceable.Rotation"/>.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.IPlaceable.LocationChanged">
            <summary>
            Occurs when the <see cref="P:RGB.NET.Core.IPlaceable.Location"/> property was changed.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.IPlaceable.SizeChanged">
            <summary>
            Occurs when the <see cref="P:RGB.NET.Core.IPlaceable.Size"/> property was changed.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.IPlaceable.ScaleChanged">
            <summary>
            Occurs when the <see cref="P:RGB.NET.Core.IPlaceable.Scale"/> property was changed.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.IPlaceable.RotationChanged">
            <summary>
            Occurs when the <see cref="P:RGB.NET.Core.IPlaceable.Rotation"/> property was changed.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.IPlaceable.ActualLocationChanged">
            <summary>
            Occurs when the <see cref="P:RGB.NET.Core.IPlaceable.ActualLocation"/> property was changed.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.IPlaceable.ActualSizeChanged">
            <summary>
            Occurs when the <see cref="P:RGB.NET.Core.IPlaceable.ActualSize"/> property was changed.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.IPlaceable.BoundaryChanged">
            <summary>
            Occurs when the <see cref="P:RGB.NET.Core.IPlaceable.Boundary"/> property was changed.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.Placeable">
            <summary>
            Represents a placeable element.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Placeable.Parent">
            <summary>
            Gets the parent this placeable is placed in.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Placeable.Location">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.Placeable.Size">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.Placeable.Scale">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.Placeable.Rotation">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.Placeable.ActualLocation">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.Placeable.ActualSize">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.Placeable.Boundary">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.Placeable.LocationChanged">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.Placeable.SizeChanged">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.Placeable.ScaleChanged">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.Placeable.RotationChanged">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.Placeable.ActualLocationChanged">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.Placeable.ActualSizeChanged">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.Placeable.BoundaryChanged">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.Placeable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Placeable" /> class.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Placeable.#ctor(RGB.NET.Core.IPlaceable)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Placeable" /> class.
            </summary>
            <param name="parent">The parent this placeable is placed in.</param>
        </member>
        <member name="M:RGB.NET.Core.Placeable.#ctor(RGB.NET.Core.Point,RGB.NET.Core.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Placeable" /> class.
            </summary>
            <param name="location">The location of this placeable.</param>
            <param name="size">The size of this placeable.</param>
        </member>
        <member name="M:RGB.NET.Core.Placeable.#ctor(RGB.NET.Core.IPlaceable,RGB.NET.Core.Point,RGB.NET.Core.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Placeable" /> class.
            </summary>
            <param name="parent">The parent placeable this placeable is placed in.</param>
            <param name="location">The location of this placeable.</param>
            <param name="size">The size of this placeable.</param>
        </member>
        <member name="M:RGB.NET.Core.Placeable.UpdateActualPlaceableData">
            <summary>
            Updates the <see cref="P:RGB.NET.Core.Placeable.ActualSize"/>, <see cref="P:RGB.NET.Core.Placeable.ActualLocation"/> and <see cref="P:RGB.NET.Core.Placeable.Boundary"/> based on the <see cref="P:RGB.NET.Core.Placeable.Size"/>, <see cref="P:RGB.NET.Core.Placeable.Scale"/> and <see cref="P:RGB.NET.Core.Placeable.Rotation"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Placeable.OnLocationChanged">
            <summary>
            Called when the <see cref="P:RGB.NET.Core.Placeable.Location"/> property was changed.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Placeable.OnSizeChanged">
            <summary>
            Called when the <see cref="P:RGB.NET.Core.Placeable.Size"/> property was changed.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Placeable.OnScaleChanged">
            <summary>
            Called when the <see cref="P:RGB.NET.Core.Placeable.Scale"/> property was changed.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Placeable.OnRotationChanged">
            <summary>
            Called when the <see cref="P:RGB.NET.Core.Placeable.Rotation"/> property was changed.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Placeable.OnActualLocationChanged">
            <summary>
            Called when the <see cref="P:RGB.NET.Core.Placeable.ActualLocation"/> property was changed.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Placeable.OnActualSizeChanged">
            <summary>
            Called when the <see cref="P:RGB.NET.Core.Placeable.ActualLocation"/> property was changed.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Placeable.OnBoundaryChanged">
            <summary>
            Called when the <see cref="P:RGB.NET.Core.Placeable.Boundary"/> property was changed.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.Point">
            <summary>
            Represents a point consisting of a X- and a Y-position.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Point.Invalid">
            <summary>
            Gets a [NaN,NaN]-Point.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Point.X">
            <summary>
            Gets the X-position of this <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Point.Y">
            <summary>
            Gets the Y-position of this <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Point.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Point"/> class using the provided values.
            </summary>
            <param name="x">The value used for the X-position.</param>
            <param name="y">The value used for the Y-position.</param>
        </member>
        <member name="M:RGB.NET.Core.Point.ToString">
            <summary>
            Converts the <see cref="P:RGB.NET.Core.Point.X"/>- and <see cref="P:RGB.NET.Core.Point.Y"/>-position of this <see cref="T:RGB.NET.Core.Point"/> to a human-readable string.
            </summary>
            <returns>A string that contains the <see cref="P:RGB.NET.Core.Point.X"/> and <see cref="P:RGB.NET.Core.Point.Y"/>  of this <see cref="T:RGB.NET.Core.Point"/>. For example "[X: 100, Y: 20]".</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.Equals(RGB.NET.Core.Point)">
            <summary>
            Tests whether the specified <see cref="T:RGB.NET.Core.Point" /> is equivalent to this <see cref="T:RGB.NET.Core.Point" />.
            </summary>
            <param name="other">The point to test.</param>
            <returns><c>true</c> if <paramref name="other" /> is equivalent to this <see cref="T:RGB.NET.Core.Point" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Point" /> and is equivalent to this <see cref="T:RGB.NET.Core.Point" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Point" /> equivalent to this <see cref="T:RGB.NET.Core.Point" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Point" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Point" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Equality(RGB.NET.Core.Point@,RGB.NET.Core.Point@)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Point" /> are equal.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point" /> to compare.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point" /> to compare.</param>
            <returns><c>true</c> if <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Inequality(RGB.NET.Core.Point@,RGB.NET.Core.Point@)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Point" /> are equal.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point" /> to compare.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point" /> to compare.</param>
            <returns><c>true</c> if <paramref name="point1" /> and <paramref name="point2" /> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Addition(RGB.NET.Core.Point@,RGB.NET.Core.Point@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Point"/> representing the addition of the two provided <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point"/>.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Point"/> representing the addition of the two provided <see cref="T:RGB.NET.Core.Point"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Addition(RGB.NET.Core.Point@,RGB.NET.Core.Size@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Rectangle"/> created from the provided <see cref="T:RGB.NET.Core.Point"/> and <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="point">The <see cref="T:RGB.NET.Core.Point"/> of the rectangle.</param>
            <param name="size">The <see cref="T:RGB.NET.Core.Size"/> of the rectangle.</param>
            <returns>The rectangle created from the provided <see cref="T:RGB.NET.Core.Point"/> and <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Subtraction(RGB.NET.Core.Point@,RGB.NET.Core.Point@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Point"/> representing the subtraction of the two provided <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point"/>.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Point"/> representing the subtraction of the two provided <see cref="T:RGB.NET.Core.Point"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Multiply(RGB.NET.Core.Point@,RGB.NET.Core.Point@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Point"/> representing the multiplication of the two provided <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point"/>.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Point"/> representing the multiplication of the two provided <see cref="T:RGB.NET.Core.Point"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Division(RGB.NET.Core.Point@,RGB.NET.Core.Point@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Point"/> representing the division of the two provided <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point"/>.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Point"/> representing the division of the two provided <see cref="T:RGB.NET.Core.Point"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Multiply(RGB.NET.Core.Point@,RGB.NET.Core.Scale@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Point"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Point"/> and the provided <see cref="T:RGB.NET.Core.Scale"/>.
            </summary>
            <param name="point">The <see cref="T:RGB.NET.Core.Point"/>.</param>
            <param name="scale">The <see cref="T:RGB.NET.Core.Scale"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Point"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Point"/> and the provided <see cref="T:RGB.NET.Core.Scale"/>.</returns>
        </member>
        <member name="T:RGB.NET.Core.Rectangle">
            <summary>
            Represents a rectangle defined by it's position and it's size.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.Location">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.Point"/> representing the top-left corner of the <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.Size">
            <summary>
            Gets the <see cref="P:RGB.NET.Core.Rectangle.Size"/> of the <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.Center">
            <summary>
            Gets a new <see cref="T:RGB.NET.Core.Point"/> representing the center-point of the <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.IsEmpty">
            <summary>
            Gets a bool indicating if both, the width and the height of the rectangle is greater than zero.
            <c>True</c> if the rectangle has a width or a height of zero; otherwise, <c>false</c>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle" /> class using the provided values for <see cref="P:RGB.NET.Core.Rectangle.Location" /> ans <see cref="P:RGB.NET.Core.Rectangle.Size" />.
            </summary>
            <param name="x">The x-value of the <see cref="T:RGB.NET.Core.Location" /> of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
            <param name="y">The y-value of the <see cref="T:RGB.NET.Core.Location" />-position of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
            <param name="width">The width of the <see cref="T:RGB.NET.Core.Size"/> of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
            <param name="height">The height of the <see cref="T:RGB.NET.Core.Size"/> of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(RGB.NET.Core.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle"/> class using the <see cref="P:RGB.NET.Core.Rectangle.Location"/>(0,0) and the specified <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size">The size of of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(RGB.NET.Core.Point,RGB.NET.Core.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle"/> class using the specified <see cref="T:RGB.NET.Core.Point"/> and <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="location">The location of this of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
            <param name="size">The size of of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(RGB.NET.Core.Rectangle[])">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle" /> class using the specified array of <see cref="T:RGB.NET.Core.Rectangle" />.
            The <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" /> is calculated to completely contain all rectangles provided as parameters.
            </summary>
            <param name="rectangles">The array of <see cref="T:RGB.NET.Core.Rectangle" /> used to calculate the <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(System.Collections.Generic.IEnumerable{RGB.NET.Core.Rectangle})">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle"/> class using the specified list of <see cref="T:RGB.NET.Core.Rectangle"/>.
            The <see cref="P:RGB.NET.Core.Rectangle.Location"/> and <see cref="P:RGB.NET.Core.Rectangle.Size"/> is calculated to completely contain all rectangles provided as parameters.
            </summary>
            <param name="rectangles">The list of <see cref="T:RGB.NET.Core.Rectangle"/> used to calculate the <see cref="P:RGB.NET.Core.Rectangle.Location"/> and <see cref="P:RGB.NET.Core.Rectangle.Size"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(RGB.NET.Core.Point[])">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle" /> class using the specified array of <see cref="T:RGB.NET.Core.Point" />.
            The <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" /> is calculated to contain all points provided as parameters.
            </summary>
            <param name="points">The array of <see cref="T:RGB.NET.Core.Point" /> used to calculate the <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(System.Collections.Generic.IEnumerable{RGB.NET.Core.Point})">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle" /> class using the specified list of <see cref="T:RGB.NET.Core.Point" />.
            The <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" /> is calculated to contain all points provided as parameters.
            </summary>
            <param name="points">The list of <see cref="T:RGB.NET.Core.Point" /> used to calculate the <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.ToString">
            <summary>
            Converts the <see cref="P:RGB.NET.Core.Rectangle.Location"/>- and <see cref="P:RGB.NET.Core.Rectangle.Size"/>-position of this <see cref="T:RGB.NET.Core.Rectangle"/> to a human-readable string.
            </summary>
            <returns>A string that contains the <see cref="P:RGB.NET.Core.Rectangle.Location"/> and <see cref="P:RGB.NET.Core.Rectangle.Size"/>  of this <see cref="T:RGB.NET.Core.Rectangle"/>. For example "[Location: [X: 100, Y: 10], Size: [Width: 20, Height: [40]]".</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.Equals(RGB.NET.Core.Rectangle)">
            <summary>
            Tests whether the specified <see cref="T:RGB.NET.Core.Rectangle" /> is equivalent to this <see cref="T:RGB.NET.Core.Rectangle" />.
            </summary>
            <param name="other">The rectangle to test.</param>
            <returns><c>true</c> if <paramref name="other" /> is equivalent to this <see cref="T:RGB.NET.Core.Rectangle" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Rectangle" /> and is equivalent to this <see cref="T:RGB.NET.Core.Rectangle" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Rectangle" /> equivalent to this <see cref="T:RGB.NET.Core.Rectangle" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Rectangle" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Rectangle" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.op_Equality(RGB.NET.Core.Rectangle@,RGB.NET.Core.Rectangle@)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Rectangle" /> are equal.
            </summary>
            <param name="rectangle1">The first <see cref="T:RGB.NET.Core.Rectangle" /> to compare.</param>
            <param name="rectangle2">The second <see cref="T:RGB.NET.Core.Rectangle" /> to compare.</param>
            <returns><c>true</c> if <paramref name="rectangle1" /> and <paramref name="rectangle2" /> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.op_Inequality(RGB.NET.Core.Rectangle@,RGB.NET.Core.Rectangle@)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Rectangle" /> are equal.
            </summary>
            <param name="rectangle1">The first <see cref="T:RGB.NET.Core.Rectangle" /> to compare.</param>
            <param name="rectangle2">The second <see cref="T:RGB.NET.Core.Rectangle" /> to compare.</param>
            <returns><c>true</c> if <paramref name="rectangle1" /> and <paramref name="rectangle2" /> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.op_Division(RGB.NET.Core.Rectangle@,RGB.NET.Core.Rectangle@)">
            <summary>
            Returns a <see cref="T:RGB.NET.Core.Rectangle"/> normalized to the specified reference.
            </summary>
            <param name="rectangle1">The rectangle to nromalize.</param>
            <param name="rectangle2">The reference used for normalization.</param>
            <returns>A normalized rectangle.</returns>
        </member>
        <member name="T:RGB.NET.Core.Rotation">
            <summary>
            Represents an angular rotation.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rotation.Degrees">
            <summary>
            Gets the angle in degrees.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rotation.Radians">
            <summary>
            Gets the angle in radians.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rotation.IsRotated">
            <summary>
            Gets a bool indicating if the rotation is > 0.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Rotation.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rotation"/> class using the provided values.
            </summary>
            <param name="degrees">The rotation in degrees.</param>
        </member>
        <member name="M:RGB.NET.Core.Rotation.FromDegrees(System.Single)">
            <summary>
            Creates a new Rotation out of the specified degree-angle.
            </summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The new rotation.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.FromRadians(System.Single)">
            <summary>
            Creates a new Rotation out of the specified radian-angle.
            </summary>
            <param name="radians">The angle in radians.</param>
            <returns>The new rotation.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.Equals(RGB.NET.Core.Rotation)">
            <summary>
            Tests whether the specified <see cref="T:RGB.NET.Core.Rotation" /> is equivalent to this <see cref="T:RGB.NET.Core.Rotation" />.
            </summary>
            <param name="other">The rotation to test.</param>
            <returns><c>true</c> if <paramref name="other" /> is equivalent to this <see cref="T:RGB.NET.Core.Rotation" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Rotation" /> and is equivalent to this <see cref="T:RGB.NET.Core.Rotation" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Rotation" /> equivalent to this <see cref="T:RGB.NET.Core.Rotation" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Rotation" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Rotation" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.op_Equality(RGB.NET.Core.Rotation@,RGB.NET.Core.Rotation@)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Rotation" /> are equal.
            </summary>
            <param name="rotation1">The first <see cref="T:RGB.NET.Core.Rotation" /> to compare.</param>
            <param name="rotation2">The second <see cref="T:RGB.NET.Core.Rotation" /> to compare.</param>
            <returns><c>true</c> if <paramref name="rotation1" /> and <paramref name="rotation2" /> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.op_Inequality(RGB.NET.Core.Rotation@,RGB.NET.Core.Rotation@)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Rotation" /> are equal.
            </summary>
            <param name="rotation1">The first <see cref="T:RGB.NET.Core.Rotation" /> to compare.</param>
            <param name="rotation2">The second <see cref="T:RGB.NET.Core.Rotation" /> to compare.</param>
            <returns><c>true</c> if <paramref name="rotation1" /> and <paramref name="rotation2" /> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.op_Addition(RGB.NET.Core.Rotation@,System.Single)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Rotation"/> representing the addition of the <see cref="T:RGB.NET.Core.Rotation"/> and the provided value.
            </summary>
            <param name="rotation">The <see cref="T:RGB.NET.Core.Rotation"/>.</param>
            <param name="value">The value to add.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Rotation"/> representing the addition of the <see cref="T:RGB.NET.Core.Rotation"/> and the provided value.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.op_Subtraction(RGB.NET.Core.Rotation@,System.Single)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Rotation"/> representing the subtraction of the <see cref="T:RGB.NET.Core.Rotation"/> and the provided value.
            </summary>
            <param name="rotation">The <see cref="T:RGB.NET.Core.Rotation"/>.</param>
            <param name="value">The value to substract.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Rotation"/> representing the subtraction of the <see cref="T:RGB.NET.Core.Rotation"/> and the provided value.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.op_Multiply(RGB.NET.Core.Rotation@,System.Single)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Rotation"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Rotation"/> and the provided value.
            </summary>
            <param name="rotation">The <see cref="T:RGB.NET.Core.Rotation"/>.</param>
            <param name="value">The value to multiply with.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Rotation"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Rotation"/> and the provided value.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.op_Division(RGB.NET.Core.Rotation@,System.Single)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Rotation"/> representing the division of the <see cref="T:RGB.NET.Core.Rotation"/> and the provided value.
            </summary>
            <param name="rotation">The <see cref="T:RGB.NET.Core.Rotation"/>.</param>
            <param name="value">The value to device with.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Rotation"/> representing the division of the <see cref="T:RGB.NET.Core.Rotation"/> and the provided value.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rotation.op_Implicit(System.Single)~RGB.NET.Core.Rotation">
            <summary>
            Converts a float to a <see cref="T:RGB.NET.Core.Rotation" />.
            </summary>
            <param name="rotation">The rotation in degrees to convert.</param>
        </member>
        <member name="M:RGB.NET.Core.Rotation.op_Implicit(RGB.NET.Core.Rotation@)~System.Single">
            <summary>
            Converts <see cref="T:RGB.NET.Core.Rotation" /> to a float representing the rotation in degrees.
            </summary>
            <param name="rotation">The rotatio to convert.</param>
        </member>
        <member name="T:RGB.NET.Core.Scale">
            <summary>
            Represents a scaling.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Scale.Horizontal">
            <summary>
            Gets the horizontal scaling value.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Scale.Vertical">
            <summary>
            Gets the vertical scaling value.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Scale.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Scale"/> class using the provided values.
            </summary>
            <param name="scale">The value used for horizontal and vertical scaling. 0 if not set.</param>
        </member>
        <member name="M:RGB.NET.Core.Scale.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Scale"/> class using the provided values.
            </summary>
            <param name="horizontal">The value used for horizontal scaling.</param>
            <param name="vertical">The value used for vertical scaling.</param>
        </member>
        <member name="M:RGB.NET.Core.Scale.Equals(RGB.NET.Core.Scale)">
            <summary>
            Tests whether the specified <see cref="T:RGB.NET.Core.Scale"/> is equivalent to this <see cref="T:RGB.NET.Core.Scale" />.
            </summary>
            <param name="other">The scale to test.</param>
            <returns><c>true</c> if <paramref name="other" /> is equivalent to this <see cref="T:RGB.NET.Core.Scale" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Scale.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Scale" /> and is equivalent to this <see cref="T:RGB.NET.Core.Scale" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Scale" /> equivalent to this <see cref="T:RGB.NET.Core.Scale" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Scale.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Scale" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Scale" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.Scale.Deconstruct(System.Single@,System.Single@)">
            <summary>
            Deconstructs the scale into the horizontal and vertical value.
            </summary>
            <param name="horizontalScale">The horizontal scaling value.</param>
            <param name="verticalScale">The vertical scaling value.</param>
        </member>
        <member name="M:RGB.NET.Core.Scale.op_Equality(RGB.NET.Core.Scale,RGB.NET.Core.Scale)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Scale" /> are equal.
            </summary>
            <param name="scale1">The first <see cref="T:RGB.NET.Core.Scale" /> to compare.</param>
            <param name="scale2">The second <see cref="T:RGB.NET.Core.Scale" /> to compare.</param>
            <returns><c>true</c> if <paramref name="scale1" /> and <paramref name="scale2" /> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Scale.op_Inequality(RGB.NET.Core.Scale,RGB.NET.Core.Scale)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Scale" /> are equal.
            </summary>
            <param name="scale1">The first <see cref="T:RGB.NET.Core.Scale" /> to compare.</param>
            <param name="scale2">The second <see cref="T:RGB.NET.Core.Scale" /> to compare.</param>
            <returns><c>true</c> if <paramref name="scale1" /> and <paramref name="scale2" /> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Scale.op_Addition(RGB.NET.Core.Scale,System.Single)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Scale"/> representing the addition of the <see cref="T:RGB.NET.Core.Scale"/> and the provided value.
            </summary>
            <param name="scale">The <see cref="T:RGB.NET.Core.Scale"/>.</param>
            <param name="value">The value to add.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Scale"/> representing the addition of the <see cref="T:RGB.NET.Core.Scale"/> and the provided value.</returns>
        </member>
        <member name="M:RGB.NET.Core.Scale.op_Subtraction(RGB.NET.Core.Scale,System.Single)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Scale"/> representing the subtraction of the <see cref="T:RGB.NET.Core.Scale"/> and the provided value.
            </summary>
            <param name="scale">The <see cref="T:RGB.NET.Core.Scale"/>.</param>
            <param name="value">The value to substract.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Scale"/> representing the subtraction of the <see cref="T:RGB.NET.Core.Scale"/> and the provided value.</returns>
        </member>
        <member name="M:RGB.NET.Core.Scale.op_Multiply(RGB.NET.Core.Scale,System.Single)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Scale"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Scale"/> and the provided value.
            </summary>
            <param name="scale">The <see cref="T:RGB.NET.Core.Scale"/>.</param>
            <param name="value">The value to multiply with.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Scale"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Scale"/> and the provided value.</returns>
        </member>
        <member name="M:RGB.NET.Core.Scale.op_Division(RGB.NET.Core.Scale,System.Single)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Scale"/> representing the division of the <see cref="T:RGB.NET.Core.Scale"/> and the provided value.
            </summary>
            <param name="scale">The <see cref="T:RGB.NET.Core.Scale"/>.</param>
            <param name="value">The value to device with.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Scale"/> representing the division of the <see cref="T:RGB.NET.Core.Scale"/> and the provided value.</returns>
        </member>
        <member name="M:RGB.NET.Core.Scale.op_Implicit(System.Single)~RGB.NET.Core.Scale">
            <summary>
            Converts a float to a <see cref="T:RGB.NET.Core.Scale" />.
            </summary>
            <param name="scale">The scale value to convert.</param>
        </member>
        <member name="T:RGB.NET.Core.Shape">
            <summary>
            Contains a list of different shapes used to define the layout of a LED.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.Shape.Custom">
            <summary>
            A custom shape defined by vector-data.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.Shape.Rectangle">
            <summary>
            A simple rectangle.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.Shape.Circle">
            <summary>
            A simple circle.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.Size">
            <summary>
            Represents a size consisting of a width and a height.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Size.Invalid">
            <summary>
            Gets a [NaN,NaN]-Size.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Size.Width">
            <summary>
            Gets or sets the width component value of this <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Size.Height">
            <summary>
            Gets or sets the height component value of this <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Size.#ctor(System.Single)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Size" /> using the provided size to define a square.
            </summary>
            <param name="size">The size used for the <see cref="P:RGB.NET.Core.Size.Width" /> component value and the <see cref="P:RGB.NET.Core.Size.Height" /> component value.</param>
        </member>
        <member name="M:RGB.NET.Core.Size.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Size"/> class using the provided values.
            </summary>
            <param name="width">The size used for the <see cref="P:RGB.NET.Core.Size.Width"/> component value.</param>
            <param name="height">The size used for the <see cref="P:RGB.NET.Core.Size.Height"/> component value.</param>
        </member>
        <member name="M:RGB.NET.Core.Size.ToString">
            <summary>
            Converts the <see cref="P:RGB.NET.Core.Size.Width"/> and <see cref="P:RGB.NET.Core.Size.Height"/> of this <see cref="T:RGB.NET.Core.Size"/> to a human-readable string.
            </summary>
            <returns>A string that contains the <see cref="P:RGB.NET.Core.Size.Width"/> and <see cref="P:RGB.NET.Core.Size.Height"/>  of this <see cref="T:RGB.NET.Core.Size"/>. For example "[Width: 100, Height: 20]".</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.Equals(RGB.NET.Core.Size)">
            <summary>
            Tests whether the specified <see cref="T:RGB.NET.Core.Size" /> is equivalent to this <see cref="T:RGB.NET.Core.Size" />.
            </summary>
            <param name="other">The size to test.</param>
            <returns><c>true</c> if <paramref name="other" /> is equivalent to this <see cref="T:RGB.NET.Core.Size" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Size" /> and is equivalent to this <see cref="T:RGB.NET.Core.Size" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Size" /> equivalent to this <see cref="T:RGB.NET.Core.Size" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Size" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Size" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.Deconstruct(System.Single@,System.Single@)">
            <summary>
            Deconstructs the size into the width and height value.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Equality(RGB.NET.Core.Size@,RGB.NET.Core.Size@)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Size" /> are equal.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size" /> to compare.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size" /> to compare.</param>
            <returns><c>true</c> if <paramref name="size1" /> and <paramref name="size2" /> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Inequality(RGB.NET.Core.Size@,RGB.NET.Core.Size@)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Size" /> are equal.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size" /> to compare.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size" /> to compare.</param>
            <returns><c>true</c> if <paramref name="size1" /> and <paramref name="size2" /> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Addition(RGB.NET.Core.Size@,RGB.NET.Core.Size@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the addition of the two provided <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the addition of the two provided <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Addition(RGB.NET.Core.Size@,RGB.NET.Core.Point@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Rectangle"/> created from the provided <see cref="T:RGB.NET.Core.Point"/> and <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size">The <see cref="T:RGB.NET.Core.Size"/> of the rectangle.</param>
            <param name="point">The <see cref="T:RGB.NET.Core.Point"/> of the rectangle.</param>
            <returns>The rectangle created from the provided <see cref="T:RGB.NET.Core.Point"/> and <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Subtraction(RGB.NET.Core.Size@,RGB.NET.Core.Size@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the subtraction of the two provided <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the subtraction of the two provided <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Multiply(RGB.NET.Core.Size@,RGB.NET.Core.Size@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the multiplication of the two provided <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the multiplication of the two provided <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Multiply(RGB.NET.Core.Size@,System.Single)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Size"/> and the provided factor.
            </summary>
            <param name="size">The <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="factor">The factor by which the <see cref="T:RGB.NET.Core.Size"/> should be multiplied.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Size"/> and the provided factor.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Division(RGB.NET.Core.Size@,RGB.NET.Core.Size@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the division of the two provided <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the division of the two provided <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Division(RGB.NET.Core.Size@,System.Single)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the division of the <see cref="T:RGB.NET.Core.Size"/> and the provided factor.
            </summary>
            <param name="size">The <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="factor">The factor by which the <see cref="T:RGB.NET.Core.Size"/> should be divided.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the division of the <see cref="T:RGB.NET.Core.Size"/> and the provided factor.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Multiply(RGB.NET.Core.Size@,RGB.NET.Core.Scale@)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Size"/> and the specified <see cref="T:RGB.NET.Core.Scale"/>.
            </summary>
            <param name="size">The <see cref="T:RGB.NET.Core.Size"/> to scale.</param>
            <param name="scale">The scaling factor.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Size"/> and the specified <see cref="T:RGB.NET.Core.Scale"/>.</returns>
        </member>
        <member name="T:RGB.NET.Core.AbstractBrush">
            <inheritdoc cref="T:RGB.NET.Core.AbstractDecoratable`1" />
            <inheritdoc cref="T:RGB.NET.Core.IBrush" />
            <summary>
            Represents a basic brush.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.IsEnabled">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.CalculationMode">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.Brightness">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.Opacity">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.AbstractBrush"/> class.
            </summary>
            <param name="brightness">The overall percentage brightness of the brush. (default: 1.0)</param>
            <param name="opacity">The overall percentage opacity of the brush. (default: 1.0)</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.Render(RGB.NET.Core.Rectangle,System.Collections.Generic.IEnumerable{RGB.NET.Core.RenderTarget})">
            <summary>
            Renders the brush to the specified list of <see cref="T:RGB.NET.Core.RenderTarget"/>.
            </summary>
            <param name="rectangle">The bounding box the brush is rendered in.</param>
            <param name="renderTargets">The targets to render to.</param>
            <returns>A enumerable containing the rendered <see cref="T:RGB.NET.Core.Color"/> for each <see cref="T:RGB.NET.Core.RenderTarget"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.ApplyDecorators(RGB.NET.Core.Rectangle@,RGB.NET.Core.RenderTarget@,RGB.NET.Core.Color@)">
            <summary>
            Applies all attached and enabled decorators to the brush.
            </summary>
            <param name="rectangle">The rectangle in which the brush should be drawn.</param>
            <param name="renderTarget">The target (key/point) from which the color should be taken.</param>
            <param name="color">The <see cref="T:RGB.NET.Core.Color"/> to be modified.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.GetColorAtPoint(RGB.NET.Core.Rectangle@,RGB.NET.Core.RenderTarget@)">
            <summary>
            Gets the color at an specific point assuming the brush is drawn into the specified rectangle.
            </summary>
            <param name="rectangle">The rectangle in which the brush should be drawn.</param>
            <param name="renderTarget">The target (key/point) from which the color should be taken.</param>
            <returns>The color at the specified point.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.FinalizeColor(RGB.NET.Core.Color@)">
            <summary>
            Finalizes the color by appliing the overall brightness and opacity.<br/>
            </summary>
            <param name="color">The color to finalize.</param>
            <returns>The finalized color.</returns>
        </member>
        <member name="T:RGB.NET.Core.IBrush">
            <summary>
            Represents a basic brush.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.IsEnabled">
            <summary>
            Gets or sets if the <see cref="T:RGB.NET.Core.IBrush"/> is enabled and will be drawn on an update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.CalculationMode">
            <summary>
            Gets or sets the calculation mode used for the rectangle/points used for color-selection in brushes.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.Brightness">
            <summary>
            Gets or sets the overall percentage brightness of the <see cref="T:RGB.NET.Core.IBrush"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.Opacity">
            <summary>
            Gets or sets the overall percentage opacity of the <see cref="T:RGB.NET.Core.IBrush"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IBrush.Render(RGB.NET.Core.Rectangle,System.Collections.Generic.IEnumerable{RGB.NET.Core.RenderTarget})">
            <summary>
            Performs the render pass of the <see cref="T:RGB.NET.Core.IBrush"/> and calculates the raw <see cref="T:RGB.NET.Core.Color"/> for all requested <see cref="T:RGB.NET.Core.RenderTarget"/>.
            </summary>
            <param name="rectangle">The <see cref="T:RGB.NET.Core.Rectangle"/> in which the brush should be drawn.</param>
            <param name="renderTargets">The <see cref="T:RGB.NET.Core.RenderTarget"/> (keys/points) of which the color should be calculated.</param>
        </member>
        <member name="T:RGB.NET.Core.SolidColorBrush">
            <inheritdoc />
            <summary>
            Represents a brush drawing only a single color.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.SolidColorBrush.Color">
            <summary>
            Gets or sets the <see cref="P:RGB.NET.Core.SolidColorBrush.Color"/> drawn by this <see cref="T:RGB.NET.Core.SolidColorBrush"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.SolidColorBrush.#ctor(RGB.NET.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.SolidColorBrush" /> class.
            </summary>
            <param name="color">The <see cref="P:RGB.NET.Core.SolidColorBrush.Color" /> drawn by this <see cref="T:RGB.NET.Core.SolidColorBrush" />.</param>
        </member>
        <member name="M:RGB.NET.Core.SolidColorBrush.GetColorAtPoint(RGB.NET.Core.Rectangle@,RGB.NET.Core.RenderTarget@)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.SolidColorBrush.op_Explicit(RGB.NET.Core.Color)~RGB.NET.Core.SolidColorBrush">
            <summary>
            Converts a <see cref="P:RGB.NET.Core.SolidColorBrush.Color" /> to a <see cref="T:RGB.NET.Core.SolidColorBrush" />.
            </summary>
            <param name="color">The <see cref="P:RGB.NET.Core.SolidColorBrush.Color"/> to convert.</param>
        </member>
        <member name="M:RGB.NET.Core.SolidColorBrush.op_Implicit(RGB.NET.Core.SolidColorBrush)~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:RGB.NET.Core.SolidColorBrush" /> to a <see cref="P:RGB.NET.Core.SolidColorBrush.Color" />.
            </summary>
            <param name="brush">The <see cref="P:RGB.NET.Core.SolidColorBrush.Color"/> to convert.</param>
        </member>
        <member name="T:RGB.NET.Core.TextureBrush">
            <inheritdoc />
            <summary>
            Represents a brush drawing a texture.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.TextureBrush.Texture">
            <summary>
            Gets or sets the texture drawn by this brush.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.TextureBrush.#ctor(RGB.NET.Core.ITexture)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.TextureBrush" /> class.
            </summary>
            <param name="texture">The texture drawn by this brush.</param>
        </member>
        <member name="M:RGB.NET.Core.TextureBrush.GetColorAtPoint(RGB.NET.Core.Rectangle@,RGB.NET.Core.RenderTarget@)">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.RenderMode">
            <summary>
            Contains a list of all brush calculation modes.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RenderMode.Relative">
            <summary>
            The calculation <see cref="T:RGB.NET.Core.Rectangle"/> for <see cref="T:RGB.NET.Core.IBrush"/> will be the rectangle around the <see cref="T:RGB.NET.Core.ILedGroup"/> the <see cref="T:RGB.NET.Core.IBrush"/> is applied to.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RenderMode.Absolute">
            <summary>
            The calculation <see cref="T:RGB.NET.Core.Rectangle"/> for <see cref="T:RGB.NET.Core.IBrush"/> will always be the whole <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.RenderTarget">
            <summary>
            Represents a single target of a brush render.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RenderTarget.Led">
            <summary>
            Gets the target-<see cref="T:RGB.NET.Core.Led"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RenderTarget.Rectangle">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.Rectangle"/> representing the area to render the target-<see cref="T:RGB.NET.Core.Led"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RenderTarget.Point">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.Point"/> representing the position to render the target-<see cref="T:RGB.NET.Core.Led"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RenderTarget.#ctor(RGB.NET.Core.Led,RGB.NET.Core.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.RenderTarget"/> class.
            </summary>
            <param name="led">The target-<see cref="T:RGB.NET.Core.Led"/>.</param>
            <param name="rectangle">The <see cref="T:RGB.NET.Core.Rectangle"/> representing the area to render the target-<see cref="T:RGB.NET.Core.Led"/>.</param>
        </member>
        <member name="T:RGB.NET.Core.ITexture">
            <summary>
            Represents a generic texture.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ITexture.Empty">
            <summary>
            Gets a empty texture.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ITexture.Size">
            <summary>
            Gets the size of the texture
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ITexture.Item(RGB.NET.Core.Point@)">
            <summary>
            Gets the color at the specified location.
            </summary>
            <param name="point">The location to get the color from.</param>
            <returns>The color at the specified location.</returns>
        </member>
        <member name="P:RGB.NET.Core.ITexture.Item(RGB.NET.Core.Rectangle@)">
            <summary>
            Gets the sampled color inside the specified rectangle.
            </summary>
            <param name="rectangle">The rectangle to get the color from.</param>
            <returns>The sampled color.</returns>
        </member>
        <member name="T:RGB.NET.Core.PixelTexture`1">
            <inheritdoc />
            <summary>
            Represents a texture made of pixels (like a common image).
            </summary>
            <typeparam name="T">The type of the pixels.</typeparam>
        </member>
        <member name="P:RGB.NET.Core.PixelTexture`1.Sampler">
            <summary>
            Gets or sets the sampler used to get the color of a region.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.PixelTexture`1.Size">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.PixelTexture`1.Data">
            <summary>
            Gets the underlying pixel data.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.PixelTexture`1.Item(RGB.NET.Core.Point@)">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.PixelTexture`1.Item(RGB.NET.Core.Rectangle@)">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.PixelTexture`1.Item(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the sampled color inside the specified region.
            </summary>
            <param name="x">The x-location of the region.</param>
            <param name="y">The y-location of the region.</param>
            <param name="width">The with of the region.</param>
            <param name="height">The height of the region.</param>
            <returns>The sampled color.</returns>
        </member>
        <member name="M:RGB.NET.Core.PixelTexture`1.#ctor(System.Int32,System.Int32,System.Int32,RGB.NET.Core.ISampler{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.PixelTexture`1" /> class.
            </summary>
            <param name="with">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="dataPerPixel">The amount of data-entries per pixel.</param>
            <param name="sampler">The sampler used to get the color of a region.</param>
            <param name="stride">The stride of the data or -1 if the width should be used.</param>
        </member>
        <member name="M:RGB.NET.Core.PixelTexture`1.GetColor(System.ReadOnlySpan{`0}@)">
            <summary>
            Converts the pixel-data to a color.
            </summary>
            <param name="pixel">The pixel-data to convert.</param>
            <returns>The color represented by the specified pixel-data.</returns>
        </member>
        <member name="M:RGB.NET.Core.PixelTexture`1.GetPixelData(System.Int32,System.Int32)">
            <summary>
            Gets the pixel-data at the specified location.
            </summary>
            <param name="x">The x-location.</param>
            <param name="y">The y-location.</param>
            <returns>The pixel-data on the specified location.</returns>
        </member>
        <member name="M:RGB.NET.Core.PixelTexture`1.GetRegionData(System.Int32,System.Int32,System.Int32,System.Int32,System.Span{`0}@)">
            <summary>
            Writes the pixel-data of the specified region to the passed buffer.
            </summary>
            <param name="x">The x-location of the region to get the data for.</param>
            <param name="y">The y-location of the region to get the data for.</param>
            <param name="width">The width of the region to get the data for.</param>
            <param name="height">The height of the region to get the data for.</param>
            <param name="buffer">The buffer to write the data to.</param>
        </member>
        <member name="T:RGB.NET.Core.PixelTexture">
            <inheritdoc />
            <summary>
            Represents a texture made of color-pixels.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.PixelTexture.Data">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.PixelTexture.#ctor(System.Int32,System.Int32,RGB.NET.Core.Color[])">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.PixelTexture" /> class.
            A <see cref="T:RGB.NET.Core.AverageColorSampler"/> is used.
            </summary>
            <param name="with">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="data">The pixel-data of the texture.</param>
        </member>
        <member name="M:RGB.NET.Core.PixelTexture.#ctor(System.Int32,System.Int32,RGB.NET.Core.Color[],RGB.NET.Core.ISampler{RGB.NET.Core.Color})">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.PixelTexture" /> class.
            </summary>
            <param name="with">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="data">The pixel-data of the texture.</param>
            <param name="sampler">The sampler used to get the color of a region.</param>
        </member>
        <member name="M:RGB.NET.Core.PixelTexture.GetColor(System.ReadOnlySpan{RGB.NET.Core.Color}@)">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.AverageColorSampler">
            <summary>
            Represents a sampled that averages multiple color to a single color.
            </summary>
            <remarks>
            Averages all components (A, R, G, B) of the colors separately which isn't ideal in cases where multiple different colors are combined.
            </remarks>
        </member>
        <member name="M:RGB.NET.Core.AverageColorSampler.Sample(RGB.NET.Core.SamplerInfo{RGB.NET.Core.Color}@,System.Span{RGB.NET.Core.Color}@)">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.ISampler`1">
            <summary>
            Represents a generic sampler to combine multipel data entries to a single one.
            </summary>
            <typeparam name="T">The type of the data to sample.</typeparam>
        </member>
        <member name="M:RGB.NET.Core.ISampler`1.Sample(RGB.NET.Core.SamplerInfo{`0}@,System.Span{`0}@)">
            <summary>
            Samples the specified data to a single pixel-buffer.
            </summary>
            <param name="info">The information containing the data to sample.</param>
            <param name="pixelData">The buffer used to write the resulting pixel to.</param>
        </member>
        <member name="T:RGB.NET.Core.SamplerInfo`1">
            <summary>
            Represents the information used to sample data.
            </summary>
            <typeparam name="T">The type of the data to sample.</typeparam>
        </member>
        <member name="P:RGB.NET.Core.SamplerInfo`1.Width">
            <summary>
            Gets the width of the region the data comes from.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.SamplerInfo`1.Height">
            <summary>
            Gets the height of region the data comes from.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.SamplerInfo`1.Data">
            <summary>
            Gets the data to sample.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.SamplerInfo`1.#ctor(System.Int32,System.Int32,System.ReadOnlySpan{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.SamplerInfo`1" /> class.
            </summary>
            <param name="width">The width of the region the data comes from.</param>
            <param name="height">The height of region the data comes from.</param>
            <param name="data">The data to sample.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBSurface">
            <inheritdoc cref="T:RGB.NET.Core.AbstractBindable" />
            <inheritdoc cref="T:System.IDisposable" />
            <summary>
            Represents a RGB-surface containing multiple devices.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.Devices">
            <summary>
            Gets a readonly list containing all loaded <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            This collection should be locked when enumerated in a multi-threaded application.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.UpdateTriggers">
            <summary>
            Gets a readonly list containing all registered <see cref="T:RGB.NET.Core.IUpdateTrigger"/>.
            This collection should be locked when enumerated in a multi-threaded application.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.Boundary">
            <summary>
            Gets a copy of the <see cref="T:RGB.NET.Core.Rectangle"/> representing this <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.Leds">
            <summary>
            Gets a list of all <see cref="T:RGB.NET.Core.Led"/> on this <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.RGBSurface.ExceptionEventHandler">
            <summary>
            Represents the event-handler of the <see cref="E:RGB.NET.Core.RGBSurface.Exception"/>-event.
            </summary>
            <param name="args">The arguments provided by the event.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBSurface.UpdatingEventHandler">
            <summary>
            Represents the event-handler of the <see cref="E:RGB.NET.Core.RGBSurface.Updating"/>-event.
            </summary>
            <param name="args">The arguments provided by the event.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBSurface.UpdatedEventHandler">
            <summary>
            Represents the event-handler of the <see cref="E:RGB.NET.Core.RGBSurface.Updated"/>-event.
            </summary>
            <param name="args">The arguments provided by the event.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBSurface.SurfaceLayoutChangedEventHandler">
            <summary>
            Represents the event-handler of the <see cref="E:RGB.NET.Core.RGBSurface.SurfaceLayoutChanged"/>-event.
            </summary>
            <param name="args">The arguments provided by the event.</param>
        </member>
        <member name="E:RGB.NET.Core.RGBSurface.Exception">
            <summary>
            Occurs when a catched exception is thrown inside the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.RGBSurface.Updating">
            <summary>
            Occurs when the <see cref="T:RGB.NET.Core.RGBSurface"/> starts updating.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.RGBSurface.Updated">
            <summary>
            Occurs when the <see cref="T:RGB.NET.Core.RGBSurface"/> update is done.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.RGBSurface.SurfaceLayoutChanged">
            <summary>
            Occurs when the layout of this <see cref="T:RGB.NET.Core.RGBSurface"/> changed.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.RGBSurface"/> class.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.Update(System.Boolean)">
            <summary>
            Perform a full update for all devices. Updates only dirty <see cref="T:RGB.NET.Core.Led"/> by default, or all <see cref="T:RGB.NET.Core.Led"/>, if flushLeds is set to true.
            </summary>
            <param name="flushLeds">Specifies whether all <see cref="T:RGB.NET.Core.Led"/>, (including clean ones) should be updated.</param>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.Dispose">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.Render(RGB.NET.Core.ILedGroup)">
            <summary>
            Renders a ledgroup.
            </summary>
            <param name="ledGroup">The led group to render.</param>
            <exception cref="T:System.ArgumentException">Thrown if the <see cref="P:RGB.NET.Core.IBrush.CalculationMode"/> of the Brush is not valid.</exception>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.Attach(RGB.NET.Core.ILedGroup)">
            <summary>
            Attaches the specified <see cref="T:RGB.NET.Core.ILedGroup"/>.
            </summary>
            <param name="ledGroup">The <see cref="T:RGB.NET.Core.ILedGroup"/> to attach.</param>
            <returns><c>true</c> if the <see cref="T:RGB.NET.Core.ILedGroup"/> could be attached; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.Detach(RGB.NET.Core.ILedGroup)">
            <summary>
            Detaches the specified <see cref="T:RGB.NET.Core.ILedGroup"/>.
            </summary>
            <param name="ledGroup">The <see cref="T:RGB.NET.Core.ILedGroup"/> to detache.</param>
            <returns><c>true</c> if the <see cref="T:RGB.NET.Core.ILedGroup"/> could be detached; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.Attach(RGB.NET.Core.IRGBDevice)">
            <summary>
            Attaches the specified <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
            <param name="device">The <see cref="T:RGB.NET.Core.IRGBDevice"/> to attach.</param>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.Detach(RGB.NET.Core.IRGBDevice)">
            <summary>
            Detaches the specified <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
            <param name="device">The <see cref="T:RGB.NET.Core.IRGBDevice"/> to detache.</param>
            <returns><c>true</c> if the <see cref="T:RGB.NET.Core.IRGBDevice"/> could be detached; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.RegisterUpdateTrigger(RGB.NET.Core.IUpdateTrigger)">
            <summary>
            Registers the provided <see cref="T:RGB.NET.Core.IUpdateTrigger"/>.
            </summary>
            <param name="updateTrigger">The <see cref="T:RGB.NET.Core.IUpdateTrigger"/> to register.</param>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.UnregisterUpdateTrigger(RGB.NET.Core.IUpdateTrigger)">
            <summary>
            Unregisters the provided <see cref="T:RGB.NET.Core.IUpdateTrigger"/>.
            </summary>
            <param name="updateTrigger">The <see cref="T:RGB.NET.Core.IUpdateTrigger"/> to unregister.</param>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.OnException(System.Exception)">
            <summary>
            Handles the needed event-calls for an exception.
            </summary>
            <param name="ex">The exception previously thrown.</param>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.OnUpdating(RGB.NET.Core.IUpdateTrigger,RGB.NET.Core.ICustomUpdateData)">
            <summary>
            Handles the needed event-calls before updating.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.OnUpdated">
            <summary>
            Handles the needed event-calls after an update.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.AbstractUpdateTrigger">
            <summary>
            Represents a generic update trigger. 
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractUpdateTrigger.LastUpdateTime">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.AbstractUpdateTrigger.Starting">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.AbstractUpdateTrigger.Update">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateTrigger.OnStartup(RGB.NET.Core.CustomUpdateData)">
            <summary>
            Invokes the <see cref="E:RGB.NET.Core.AbstractUpdateTrigger.Starting"/>-event.
            </summary>
            <param name="updateData">Optional custom-data passed to the subscribers of the <see cref="E:RGB.NET.Core.AbstractUpdateTrigger.Starting"/>.event.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateTrigger.OnUpdate(RGB.NET.Core.CustomUpdateData)">
            <summary>
            Invokes the <see cref="E:RGB.NET.Core.AbstractUpdateTrigger.Update"/>-event.
            </summary>
            <param name="updateData">Optional custom-data passed to the subscribers of the <see cref="E:RGB.NET.Core.AbstractUpdateTrigger.Update"/>.event.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateTrigger.Start">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateTrigger.Dispose">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.CustomUpdateDataIndex">
            <summary>
            Represents an index used to identify data in the <see cref="T:RGB.NET.Core.CustomUpdateData"/>.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.CustomUpdateDataIndex.FLUSH_LEDS">
            <summary>
            Checked by the <see cref="T:RGB.NET.Core.RGBSurface"/> to see if all LEDs needs to be flushed even if they aren't changed in this update.
            default: false
            </summary>
        </member>
        <member name="F:RGB.NET.Core.CustomUpdateDataIndex.RENDER">
            <summary>
            Checked by the <see cref="T:RGB.NET.Core.RGBSurface"/> to see if the surface should be rendered in this update.
            default: true
            </summary>
        </member>
        <member name="F:RGB.NET.Core.CustomUpdateDataIndex.UPDATE_DEVICES">
            <summary>
            Checked by the <see cref="T:RGB.NET.Core.RGBSurface"/> to see if devies should be updated after rendering.
            default: true
            </summary>
        </member>
        <member name="F:RGB.NET.Core.CustomUpdateDataIndex.HEARTBEAT">
            <summary>
            Used by <see cref="T:RGB.NET.Core.DeviceUpdateTrigger"/> to indicate heatbeat updates.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.ICustomUpdateData">
            <summary>
            Represents a set of custom data, each indexed by a string-key.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ICustomUpdateData.Item(System.String)">
            <summary>
            Gets the value for a specific key.
            </summary>
            <param name="key">The key of the value.</param>
            <returns>The value represented by the specified key.</returns>
        </member>
        <member name="T:RGB.NET.Core.CustomUpdateData">
            <summary>
            Represents a set of custom data, each indexed by a string-key.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.CustomUpdateData.Item(System.String)">
            <summary>
            Gets or sets the value for a specific key.
            </summary>
            <param name="key">The key of the value.</param>
            <returns>The value represented by the specified key.</returns>
        </member>
        <member name="M:RGB.NET.Core.CustomUpdateData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.CustomUpdateData"/> class.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.CustomUpdateData.#ctor(System.ValueTuple{System.String,System.Object}[])">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.CustomUpdateData"/> class.
            </summary>
            <param name="values">A params-list of tuples containing the key (string) and the value of a specific custom-data.</param>
        </member>
        <member name="T:RGB.NET.Core.DeviceUpdateTrigger">
            <summary>
            Represents an update-trigger used to update devices with a maximum update-rate.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.Timeout">
            <summary>
            Gets or sets the timeout used by the blocking wait for data availability.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.UpdateFrequency">
            <summary>
            Gets the update frequency used by the trigger if not limited by data shortage.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.MaxUpdateRate">
            <summary>
            Gets or sets the maximum update rate of this trigger (is overwriten if the <see cref="P:RGB.NET.Core.DeviceUpdateTrigger.UpdateRateHardLimit"/> is smaller).
            &lt;= 0 removes the limit.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.UpdateRateHardLimit">
            <summary>
            Gets the hard limit of the update rate of this trigger. Updates will never perform faster then then this value if it's set.
            &lt;= 0 removes the limit.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.HeartbeatTimer">
            <summary>
            Gets or sets the time in ms after which a refresh-request is sent even if no changes are made in the meantime to prevent the target from timing out or similar problems.
            To disable heartbeats leave it at 0.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.LastUpdateTime">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.LastUpdateTimestamp">
            <summary>
            Gets or sets the timestamp of the last update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.HasDataEvent">
            <summary>
            Gets or sets the event to trigger when new data is available (<see cref="M:RGB.NET.Core.DeviceUpdateTrigger.TriggerHasData"/>).
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.IsRunning">
            <summary>
            Gets or sets a bool indicating if the trigger is currently updating.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.UpdateTask">
            <summary>
            Gets or sets the update loop of this trigger.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.UpdateTokenSource">
            <summary>
            Gets or sets the cancellation token source used to create the cancellation token checked by the <see cref="P:RGB.NET.Core.DeviceUpdateTrigger.UpdateTask"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.DeviceUpdateTrigger.UpdateToken">
            <summary>
            Gets or sets the cancellation token checked by the <see cref="P:RGB.NET.Core.DeviceUpdateTrigger.UpdateTask"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.DeviceUpdateTrigger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.DeviceUpdateTrigger"/> class.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.DeviceUpdateTrigger.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.DeviceUpdateTrigger"/> class.
            </summary>
            <param name="updateRateHardLimit">The hard limit of the update rate of this trigger.</param>
        </member>
        <member name="M:RGB.NET.Core.DeviceUpdateTrigger.Start">
            <summary>
            Starts the trigger.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.DeviceUpdateTrigger.Stop">
            <summary>
            Stops the trigger.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.DeviceUpdateTrigger.UpdateLoop">
            <summary>
            The update loop called by the <see cref="P:RGB.NET.Core.DeviceUpdateTrigger.UpdateTask"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.DeviceUpdateTrigger.TriggerHasData">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.DeviceUpdateTrigger.Dispose">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.IDeviceUpdateTrigger">
            <summary>
            Represents an update trigger used to trigger device-updates.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IDeviceUpdateTrigger.TriggerHasData">
            <summary>
            Indicates that there's data available to process.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IUpdateQueue`2">
            <summary>
            Represents a generic update queue.
            </summary>
            <typeparam name="TIdentifier">The identifier used to identify the data processed by this queue.</typeparam>
            <typeparam name="TData">The type of the data processed by this queue.</typeparam>
        </member>
        <member name="P:RGB.NET.Core.IUpdateQueue`2.RequiresFlush">
            <summary>
            Gets a bool indicating if the queue requires a flush of all data due to an internal error.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IUpdateQueue`2.SetData(System.ReadOnlySpan{System.ValueTuple{`0,`1}})">
            <summary>
            Sets or merges the provided data set in the current dataset and notifies the trigger that there is new data available.
            </summary>
            <param name="dataSet">The set of data.</param>
        </member>
        <member name="M:RGB.NET.Core.IUpdateQueue`2.Reset">
            <summary>
            Resets the current data set.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IUpdateQueue">
            <summary>
            Represents a generic update queue processing <see cref="T:RGB.NET.Core.Color"/>-data using <see cref="T:System.Object"/>-identifiers.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.UpdateQueue`2">
            <summary>
            Represents a generic update queue.
            </summary>
            <typeparam name="TIdentifier">The type of the key used to identify some data.</typeparam>
            <typeparam name="TData">The type of the data.</typeparam>
        </member>
        <member name="P:RGB.NET.Core.UpdateQueue`2.RequiresFlush">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.UpdateQueue`2.#ctor(RGB.NET.Core.IDeviceUpdateTrigger)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.UpdateQueue`2"/> class.
            </summary>
            <param name="updateTrigger">The <see cref="T:RGB.NET.Core.IDeviceUpdateTrigger"/> causing this queue to update.</param>
        </member>
        <member name="M:RGB.NET.Core.UpdateQueue`2.OnUpdate(System.Object,RGB.NET.Core.CustomUpdateData)">
            <summary>
            Event handler for the <see cref="E:RGB.NET.Core.IUpdateTrigger.Update"/>-event.
            </summary>
            <param name="sender">The <see cref="T:RGB.NET.Core.IUpdateTrigger"/> causing this update.</param>
            <param name="customData"><see cref="T:RGB.NET.Core.CustomUpdateData"/> provided by the trigger.</param>
        </member>
        <member name="M:RGB.NET.Core.UpdateQueue`2.OnStartup(System.Object,RGB.NET.Core.CustomUpdateData)">
            <summary>
            Event handler for the <see cref="E:RGB.NET.Core.IUpdateTrigger.Starting"/>-event.
            </summary>
            <param name="sender">The starting <see cref="T:RGB.NET.Core.IUpdateTrigger"/>.</param>
            <param name="customData"><see cref="T:RGB.NET.Core.CustomUpdateData"/> provided by the trigger.</param>
        </member>
        <member name="M:RGB.NET.Core.UpdateQueue`2.Update(System.ReadOnlySpan{System.ValueTuple{`0,`1}}@)">
            <summary>
            Performs the update this queue is responsible for.
            </summary>
            <param name="dataSet">The set of data that needs to be updated.</param>
        </member>
        <member name="M:RGB.NET.Core.UpdateQueue`2.SetData(System.ReadOnlySpan{System.ValueTuple{`0,`1}})">
            <summary>
            Sets or merges the provided data set in the current dataset and notifies the trigger that there is new data available.
            </summary>
            <param name="dataSet">The set of data.</param>
        </member>
        <member name="M:RGB.NET.Core.UpdateQueue`2.Reset">
            <summary>
            Resets the current data set.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.UpdateQueue`2.Dispose">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.UpdateQueue">
            <summary>
            Represents a generic <see cref="T:RGB.NET.Core.UpdateQueue`2"/> using an object as the key and a color as the value.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.UpdateQueue.#ctor(RGB.NET.Core.IDeviceUpdateTrigger)">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.IUpdateTrigger">
            <summary>
            Represents a trigger causing an update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IUpdateTrigger.LastUpdateTime">
            <summary>
            Gets the time spent for the last update.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.IUpdateTrigger.Starting">
            <summary>
            Occurs when the trigger is starting up.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.IUpdateTrigger.Update">
            <summary>
            Occurs when the trigger wants to cause an update.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IUpdateTrigger.Start">
            <summary>
            Starts the update trigger.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.ManualUpdateTrigger">
            <inheritdoc />
            <summary>
            Represents an update trigger that is manully triggered by calling <see cref="M:RGB.NET.Core.ManualUpdateTrigger.TriggerUpdate(RGB.NET.Core.CustomUpdateData)"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ManualUpdateTrigger.LastUpdateTime">
            <summary>
            Gets the time it took the last update-loop cycle to run.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ManualUpdateTrigger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.ManualUpdateTrigger"/> class.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ManualUpdateTrigger.Start">
            <summary>
            Starts the trigger if needed, causing it to performing updates.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ManualUpdateTrigger.Stop">
            <summary>
            Stops the trigger if running, causing it to stop performing updates.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ManualUpdateTrigger.TriggerUpdate(RGB.NET.Core.CustomUpdateData)">
            <summary>
            Triggers an update.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ManualUpdateTrigger.Dispose">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.TimerUpdateTrigger">
            <inheritdoc />
            <summary>
            Represents an update trigger that triggers in a set interval.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.TimerUpdateTrigger.UpdateTask">
            <summary>
            Gets or sets the update loop of this trigger.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.TimerUpdateTrigger.UpdateTokenSource">
            <summary>
            Gets or sets the cancellation token source used to create the cancellation token checked by the <see cref="P:RGB.NET.Core.TimerUpdateTrigger.UpdateTask"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.TimerUpdateTrigger.UpdateToken">
            <summary>
            Gets or sets the cancellation token checked by the <see cref="P:RGB.NET.Core.TimerUpdateTrigger.UpdateTask"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.TimerUpdateTrigger.UpdateFrequency">
            <summary>
            Gets or sets the update-frequency in seconds. (Calculate by using '1.0 / updates per second')
            </summary>
        </member>
        <member name="P:RGB.NET.Core.TimerUpdateTrigger.LastUpdateTime">
            <summary>
            Gets the time it took the last update-loop cycle to run.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.TimerUpdateTrigger.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.TimerUpdateTrigger"/> class.
            </summary>
            <param name="autostart">A value indicating if the trigger should automatically <see cref="M:RGB.NET.Core.TimerUpdateTrigger.Start"/> right after construction.</param>
        </member>
        <member name="M:RGB.NET.Core.TimerUpdateTrigger.#ctor(RGB.NET.Core.CustomUpdateData,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.TimerUpdateTrigger"/> class.
            </summary>
            <param name="customUpdateData">The update-data passed on each update triggered.</param>
            <param name="autostart">A value indicating if the trigger should automatically <see cref="M:RGB.NET.Core.TimerUpdateTrigger.Start"/> right after construction.</param>
        </member>
        <member name="M:RGB.NET.Core.TimerUpdateTrigger.Start">
            <summary>
            Starts the trigger if needed, causing it to performing updates.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.TimerUpdateTrigger.Stop">
            <summary>
            Stops the trigger if running, causing it to stop performing updates.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.TimerUpdateTrigger.Dispose">
            <inheritdoc />
        </member>
    </members>
</doc>
